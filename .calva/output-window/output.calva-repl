; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.27.4"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> (d {:x 1 :y 1} {:x 10 :y 10})
11
clj꞉hench.utils꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> (all-obstacles sample (-> sample :you))
[{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 5, :y 4} {:x 5, :y 3} {:x 6, :y 3}]
clj꞉hench.space꞉> (def a 1)
#'hench.space/a
clj꞉hench.space꞉> - a
1
clj꞉hench.space꞉> 
(- a)
-1
clj꞉hench.space꞉> (mod 5 4)
1
clj꞉hench.food꞉> 
(mod (inc 4) 4)
1
clj꞉hench.food꞉> 
(mod (inc 3) 4)
0
clj꞉hench.food꞉> (mod (dec 0) 4)
3
clj꞉hench.food꞉> 
; Evaluating file: space.clj
; Syntax error compiling at (src/hench/space.clj:392:15).
; Unable to resolve symbol: not-obstacle? in this context
; Evaluation of file space.clj failed: class clojure.lang.Compiler$CompilerException

clj꞉hench.food꞉> 
clj꞉hench.space꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> (expand-cases {:x 0 :y 0} [] 11 11)
; Execution error (NullPointerException) at hench.space/expand-case$fn (space.clj:388).
; null
clj꞉hench.space꞉> (update {:x 0 :y 0} :x #(mod (inc %) 11))
{:x 1, :y 0}
clj꞉hench.space꞉> (not-obstacle? {:x 0 :y 0} [])
true
clj꞉hench.space꞉> 
(expand-case {:x 0 :y 0} [] 11 11)
[{:x 1, :y 0} {:x 10, :y 0} {:x 0, :y 1} {:x 0, :y 10}]
clj꞉hench.space꞉> (expand-cases [{:x 0 :y 0} {:x 1 :y 0}] [{:x 0 :y 0} {:x 1 :y 0}] 11 11)
[{:x 10, :y 0} {:x 0, :y 1} {:x 0, :y 10} {:x 2, :y 0} {:x 1, :y 1} {:x 1, :y 10}]
clj꞉hench.space꞉> 
(expand-cases [{:x 0 :y 0} {:x 1 :y 0}] [{:x 0 :y 0} {:x 1 :y 0} {:x 1, :y 10}] 11 11)
[{:x 10, :y 0} {:x 0, :y 1} {:x 0, :y 10} {:x 2, :y 0} {:x 1, :y 1}]
clj꞉hench.space꞉> (surface {:x 5 :y 5} {:you sample} [] 11 11)
; Execution error (ArityException) at hench.space/eval12200 (REPL:78).
; Wrong number of args (5) passed to: hench.space/surface
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 5 :y 5} {:you sample} [] 11 11)
; Execution error (NullPointerException) at hench.space/surface (space.clj:412).
; null
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} [] 11 11)
; Execution error (NullPointerException) at hench.space/surface (space.clj:412).
; null
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} [] 11 11)
expc:  [{:x 0, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> (:length (:you sample))
5
clj꞉hench.space꞉> (concat [{:x 10 :y 1}] [{:x 0, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}])
({:x 10, :y 1} {:x 0, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0})
clj꞉hench.space꞉> 
(vec (concat [{:x 10 :y 1}] [{:x 0, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]))
[{:x 10, :y 1} {:x 0, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
clj꞉hench.space꞉> 

clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} [] 11 11)
expc:  [{:x 0, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 

clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} [] 11 11)
expc:  [{:x 0, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 

clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} [] 11 11)
expc:  [{:x 0, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} [] 11 11)
expc:  [{:x 0, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
here?
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
expcases for v:  [{:x 10, :y 1}]
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
expcases for v:  [{:x 10, :y 1}]
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
1
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
expcases for v:  [{:x 10, :y 1}]
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1}]
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
expcases for v:  [{:x 10, :y 1}]
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1}]
count v:  1
l:  nil
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> (:you sample)
{:shout "why are we shouting??",
 :squad "",
 :name "My Snake",
 :head {:x 0, :y 1},
 :id "snake-508e96ac-94ad-11ea-bb37",
 :latency "111",
 :length 5,
 :health 54,
 :body [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0}]}
clj꞉hench.space꞉> 
(:length (:you sample))
5
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} {:you sample} (:body (:you sample)) 11 11)
expcases for v:  [{:x 10, :y 1}]
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1}]
count v:  1
l:  nil
length s:  nil
; Execution error (NullPointerException) at (REPL:1).
; null
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} (:you sample) (:body (:you sample)) 11 11)
expcases for v:  [{:x 10, :y 1}]
expc:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1}]
count v:  1
l:  5
length s:  5
expcases for v:  [{:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
expc:  [{:x 8, :y 1} {:x 9, :y 2} {:x 9, :y 0} {:x 0, :y 2} {:x 10, :y 3} {:x 0, :y 0} {:x 10, :y 10}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0} {:x 8, :y 1} {:x 9, :y 2} {:x 9, :y 0} {:x 0, :y 2} {:x 10, :y 3} {:x 0, :y 0} {:x 10, :y 10}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0}]
count v:  3
l:  5
length s:  5
expcases for v:  [{:x 8, :y 1} {:x 9, :y 2} {:x 9, :y 0} {:x 0, :y 2} {:x 10, :y 3} {:x 0, :y 0} {:x 10, :y 10}]
expc:  [{:x 7, :y 1} {:x 8, :y 2} {:x 8, :y 0} {:x 9, :y 3} {:x 9, :y 10} {:x 1, :y 2} {:x 0, :y 3} {:x 10, :y 4} {:x 1, :y 0} {:x 0, :y 10} {:x 10, :y 9}]
conc:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0} {:x 8, :y 1} {:x 9, :y 2} {:x 9, :y 0} {:x 0, :y 2} {:x 10, :y 3} {:x 0, :y 0} {:x 10, :y 10} {:x 7, :y 1} {:x 8, :y 2} {:x 8, :y 0} {:x 9, :y 3} {:x 9, :y 10} {:x 1, :y 2} {:x 0, :y 3} {:x 10, :y 4} {:x 1, :y 0} {:x 0, :y 10} {:x 10, :y 9}]
forbidden:  [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 10, :y 1} {:x 9, :y 1} {:x 10, :y 2} {:x 10, :y 0} {:x 8, :y 1} {:x 9, :y 2} {:x 9, :y 0} {:x 0, :y 2} {:x 10, :y 3} {:x 0, :y 0} {:x 10, :y 10}]
count v:  7
l:  5
length s:  5
[{:x 8, :y 1} {:x 9, :y 2} {:x 9, :y 0} {:x 0, :y 2} {:x 10, :y 3} {:x 0, :y 0} {:x 10, :y 10}]
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} (:you sample) (:body (:you sample)) 11 11)
[{:x 8, :y 1} {:x 9, :y 2} {:x 9, :y 0} {:x 0, :y 2} {:x 10, :y 3} {:x 0, :y 0} {:x 10, :y 10}]
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(surface {:x 10 :y 1} (:you sample) (:body (:you sample)) 11 11)
[{:x 10, :y 1}
 {:x 9, :y 1}
 {:x 10, :y 2}
 {:x 10, :y 0}
 {:x 8, :y 1}
 {:x 9, :y 2}
 {:x 9, :y 0}
 {:x 0, :y 2}
 {:x 10, :y 3}
 {:x 0, :y 0}
 {:x 10, :y 10}]
clj꞉hench.space꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> (convex-hull {:body [{:x 0 :y 0} {:x 10 :y 10}]})
; Execution error (ClassCastException) at hench.utils/convex-hull (utils.clj:154).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉hench.utils꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
(convex-hull {:body [{:x 0 :y 0} {:x 10 :y 10}]})
; Execution error (ClassCastException) at hench.utils/convex-hull (utils.clj:154).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉hench.utils꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
(convex-hull {:body [{:x 0 :y 0} {:x 10 :y 10}]})
xstart:  0
xend:  11
ystart:  0
yend:  11
[{:x 0, :y 0}
 {:x 0, :y 1}
 {:x 0, :y 2}
 {:x 0, :y 3}
 {:x 0, :y 4}
 {:x 0, :y 5}
 {:x 0, :y 6}
 {:x 0, :y 7}
 {:x 0, :y 8}
 {:x 0, :y 9}
 {:x 0, :y 10}
 {:x 1, :y 0}
 {:x 1, :y 1}
 {:x 1, :y 2}
 {:x 1, :y 3}
 {:x 1, :y 4}
 {:x 1, :y 5}
 {:x 1, :y 6}
 {:x 1, :y 7}
 {:x 1, :y 8}
 {:x 1, :y 9}
 {:x 1, :y 10}
 {:x 2, :y 0}
 {:x 2, :y 1}
 {:x 2, :y 2}
 {:x 2, :y 3}
 {:x 2, :y 4}
 {:x 2, :y 5}
 {:x 2, :y 6}
 {:x 2, :y 7}
 {:x 2, :y 8}
 {:x 2, :y 9}
 {:x 2, :y 10}
 {:x 3, :y 0}
 {:x 3, :y 1}
 {:x 3, :y 2}
 {:x 3, :y 3}
 {:x 3, :y 4}
 {:x 3, :y 5}
 {:x 3, :y 6}
 {:x 3, :y 7}
 {:x 3, :y 8}
 {:x 3, :y 9}
 {:x 3, :y 10}
 {:x 4, :y 0}
 {:x 4, :y 1}
 {:x 4, :y 2}
 {:x 4, :y 3}
 {:x 4, :y 4}
 {:x 4, :y 5}
 ...]
clj꞉hench.utils꞉> (mod 21 11)
10
clj꞉hench.utils꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
(convex-hull {:body [{:x 0 :y 0} {:x 10 :y 10}]})
xstart:  0
xend:  11
ystart:  0
yend:  11
[{:x 0, :y 0}
 {:x 0, :y 1}
 {:x 0, :y 2}
 {:x 0, :y 3}
 {:x 0, :y 4}
 {:x 0, :y 5}
 {:x 0, :y 6}
 {:x 0, :y 7}
 {:x 0, :y 8}
 {:x 0, :y 9}
 {:x 0, :y 10}
 {:x 1, :y 0}
 {:x 1, :y 1}
 {:x 1, :y 2}
 {:x 1, :y 3}
 {:x 1, :y 4}
 {:x 1, :y 5}
 {:x 1, :y 6}
 {:x 1, :y 7}
 {:x 1, :y 8}
 {:x 1, :y 9}
 {:x 1, :y 10}
 {:x 2, :y 0}
 {:x 2, :y 1}
 {:x 2, :y 2}
 {:x 2, :y 3}
 {:x 2, :y 4}
 {:x 2, :y 5}
 {:x 2, :y 6}
 {:x 2, :y 7}
 {:x 2, :y 8}
 {:x 2, :y 9}
 {:x 2, :y 10}
 {:x 3, :y 0}
 {:x 3, :y 1}
 {:x 3, :y 2}
 {:x 3, :y 3}
 {:x 3, :y 4}
 {:x 3, :y 5}
 {:x 3, :y 6}
 {:x 3, :y 7}
 {:x 3, :y 8}
 {:x 3, :y 9}
 {:x 3, :y 10}
 {:x 4, :y 0}
 {:x 4, :y 1}
 {:x 4, :y 2}
 {:x 4, :y 3}
 {:x 4, :y 4}
 {:x 4, :y 5}
 ...]
clj꞉hench.utils꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
(convex-hull {:body [{:x 0 :y 0} {:x 10 :y 10}]})
xstart:  10
xend:  12
ystart:  10
yend:  12
[{:x 10, :y 10} {:x 10, :y 0} {:x 0, :y 10} {:x 0, :y 0}]
clj꞉hench.utils꞉> 
(convex-hull {:body [{:x 7 :y 7} {:x 10 :y 10}]})
xstart:  7
xend:  11
ystart:  7
yend:  11
[{:x 7, :y 7}
 {:x 7, :y 8}
 {:x 7, :y 9}
 {:x 7, :y 10}
 {:x 8, :y 7}
 {:x 8, :y 8}
 {:x 8, :y 9}
 {:x 8, :y 10}
 {:x 9, :y 7}
 {:x 9, :y 8}
 {:x 9, :y 9}
 {:x 9, :y 10}
 {:x 10, :y 7}
 {:x 10, :y 8}
 {:x 10, :y 9}
 {:x 10, :y 10}]
clj꞉hench.utils꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> (vec (apply concat (mapv #(expand-case % (convex-hull {:body [{:x 4 :y 4} {:x 10 :y 10}]}) 11 11) (convex-hull {:body [{:x 4 :y 4} {:x 10 :y 10}]}))))
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
xstart:  10
xend:  16
ystart:  10
yend:  16
[{:x 9, :y 10}
 {:x 10, :y 9}
 {:x 9, :y 0}
 {:x 9, :y 1}
 {:x 9, :y 2}
 {:x 9, :y 3}
 {:x 9, :y 4}
 {:x 10, :y 5}
 {:x 0, :y 9}
 {:x 0, :y 5}
 {:x 1, :y 9}
 {:x 1, :y 5}
 {:x 2, :y 9}
 {:x 2, :y 5}
 {:x 3, :y 9}
 {:x 3, :y 5}
 {:x 5, :y 10}
 {:x 4, :y 9}
 {:x 5, :y 0}
 {:x 5, :y 1}
 {:x 5, :y 2}
 {:x 5, :y 3}
 {:x 5, :y 4}
 {:x 4, :y 5}]
clj꞉hench.space꞉> (convex-hull {:body [{:x 4 :y 4} {:x 10 :y 10}]})
xstart:  10
xend:  16
ystart:  10
yend:  16
[{:x 10, :y 10}
 {:x 10, :y 0}
 {:x 10, :y 1}
 {:x 10, :y 2}
 {:x 10, :y 3}
 {:x 10, :y 4}
 {:x 0, :y 10}
 {:x 0, :y 0}
 {:x 0, :y 1}
 {:x 0, :y 2}
 {:x 0, :y 3}
 {:x 0, :y 4}
 {:x 1, :y 10}
 {:x 1, :y 0}
 {:x 1, :y 1}
 {:x 1, :y 2}
 {:x 1, :y 3}
 {:x 1, :y 4}
 {:x 2, :y 10}
 {:x 2, :y 0}
 {:x 2, :y 1}
 {:x 2, :y 2}
 {:x 2, :y 3}
 {:x 2, :y 4}
 {:x 3, :y 10}
 {:x 3, :y 0}
 {:x 3, :y 1}
 {:x 3, :y 2}
 {:x 3, :y 3}
 {:x 3, :y 4}
 {:x 4, :y 10}
 {:x 4, :y 0}
 {:x 4, :y 1}
 {:x 4, :y 2}
 {:x 4, :y 3}
 {:x 4, :y 4}]
clj꞉hench.space꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
(convex-hull {:body [{:x 4 :y 4} {:x 10 :y 10}]})
[{:x 10, :y 10}
 {:x 10, :y 0}
 {:x 10, :y 1}
 {:x 10, :y 2}
 {:x 10, :y 3}
 {:x 10, :y 4}
 {:x 0, :y 10}
 {:x 0, :y 0}
 {:x 0, :y 1}
 {:x 0, :y 2}
 {:x 0, :y 3}
 {:x 0, :y 4}
 {:x 1, :y 10}
 {:x 1, :y 0}
 {:x 1, :y 1}
 {:x 1, :y 2}
 {:x 1, :y 3}
 {:x 1, :y 4}
 {:x 2, :y 10}
 {:x 2, :y 0}
 {:x 2, :y 1}
 {:x 2, :y 2}
 {:x 2, :y 3}
 {:x 2, :y 4}
 {:x 3, :y 10}
 {:x 3, :y 0}
 {:x 3, :y 1}
 {:x 3, :y 2}
 {:x 3, :y 3}
 {:x 3, :y 4}
 {:x 4, :y 10}
 {:x 4, :y 0}
 {:x 4, :y 1}
 {:x 4, :y 2}
 {:x 4, :y 3}
 {:x 4, :y 4}]
clj꞉hench.utils꞉> 
(convex-hull {:body [{:x 4 :y 4} {:x 5 :y 5} {:x 7 :y 7} {:x 10 :y 10}]})
[{:x 10, :y 10}
 {:x 10, :y 0}
 {:x 10, :y 1}
 {:x 10, :y 2}
 {:x 10, :y 3}
 {:x 10, :y 4}
 {:x 0, :y 10}
 {:x 0, :y 0}
 {:x 0, :y 1}
 {:x 0, :y 2}
 {:x 0, :y 3}
 {:x 0, :y 4}
 {:x 1, :y 10}
 {:x 1, :y 0}
 {:x 1, :y 1}
 {:x 1, :y 2}
 {:x 1, :y 3}
 {:x 1, :y 4}
 {:x 2, :y 10}
 {:x 2, :y 0}
 {:x 2, :y 1}
 {:x 2, :y 2}
 {:x 2, :y 3}
 {:x 2, :y 4}
 {:x 3, :y 10}
 {:x 3, :y 0}
 {:x 3, :y 1}
 {:x 3, :y 2}
 {:x 3, :y 3}
 {:x 3, :y 4}
 {:x 4, :y 10}
 {:x 4, :y 0}
 {:x 4, :y 1}
 {:x 4, :y 2}
 {:x 4, :y 3}
 {:x 4, :y 4}]
clj꞉hench.utils꞉> 
(vec (apply concat (mapv #(expand-case % (convex-hull {:body [{:x 4 :y 4} {:x 10 :y 10}]}) 11 11) (convex-hull {:body [{:x 4 :y 4} {:x 10 :y 10}]}))))
; Syntax error compiling at (.calva/output-window/output.calva-repl:774:27).
; Unable to resolve symbol: expand-case in this context
clj꞉hench.utils꞉> (vec (for [x (vec (range 4 10))
               y (vec (range 4 10))]
           {:x (mod x 11) :y (mod y 11)}))
[{:x 4, :y 4}
 {:x 4, :y 5}
 {:x 4, :y 6}
 {:x 4, :y 7}
 {:x 4, :y 8}
 {:x 4, :y 9}
 {:x 5, :y 4}
 {:x 5, :y 5}
 {:x 5, :y 6}
 {:x 5, :y 7}
 {:x 5, :y 8}
 {:x 5, :y 9}
 {:x 6, :y 4}
 {:x 6, :y 5}
 {:x 6, :y 6}
 {:x 6, :y 7}
 {:x 6, :y 8}
 {:x 6, :y 9}
 {:x 7, :y 4}
 {:x 7, :y 5}
 {:x 7, :y 6}
 {:x 7, :y 7}
 {:x 7, :y 8}
 {:x 7, :y 9}
 {:x 8, :y 4}
 {:x 8, :y 5}
 {:x 8, :y 6}
 {:x 8, :y 7}
 {:x 8, :y 8}
 {:x 8, :y 9}
 {:x 9, :y 4}
 {:x 9, :y 5}
 {:x 9, :y 6}
 {:x 9, :y 7}
 {:x 9, :y 8}
 {:x 9, :y 9}]
clj꞉hench.utils꞉> 
(def haz (vec (for [x (vec (range 4 10))
            y (vec (range 4 10))]
        {:x (mod x 11) :y (mod y 11)})))
#'hench.utils/haz
clj꞉hench.utils꞉> 
(vec (apply concat (mapv #(expand-case % haz 11 11) haz)))
; Syntax error compiling at (.calva/output-window/output.calva-repl:822:27).
; Unable to resolve symbol: expand-case in this context
clj꞉hench.utils꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> 
(def haz (vec (for [x (vec (range 4 10))
            y (vec (range 4 10))]
        {:x (mod x 11) :y (mod y 11)})))
; Syntax error (IllegalStateException) compiling def at (.calva/output-window/output.calva-repl:829:1).
; haz already refers to: #'hench.utils/haz in namespace: hench.space
clj꞉hench.space꞉> 
(def haza (vec (for [x (vec (range 4 10))
            y (vec (range 4 10))]
        {:x (mod x 11) :y (mod y 11)})))
#'hench.space/haza
clj꞉hench.space꞉> 
(vec (apply concat (mapv #(expand-case % haza 11 11) haza)))
[{:x 3, :y 4}
 {:x 4, :y 3}
 {:x 3, :y 5}
 {:x 3, :y 6}
 {:x 3, :y 7}
 {:x 3, :y 8}
 {:x 3, :y 9}
 {:x 4, :y 10}
 {:x 5, :y 3}
 {:x 5, :y 10}
 {:x 6, :y 3}
 {:x 6, :y 10}
 {:x 7, :y 3}
 {:x 7, :y 10}
 {:x 8, :y 3}
 {:x 8, :y 10}
 {:x 10, :y 4}
 {:x 9, :y 3}
 {:x 10, :y 5}
 {:x 10, :y 6}
 {:x 10, :y 7}
 {:x 10, :y 8}
 {:x 10, :y 9}
 {:x 9, :y 10}]
clj꞉hench.space꞉> 
(def haza (vec (for [x (vec (range 4 11))
            y (vec (range 4 11))]
        {:x (mod x 11) :y (mod y 11)})))
#'hench.space/haza
clj꞉hench.space꞉> 
(vec (apply concat (mapv #(expand-case % haza 11 11) haza)))
[{:x 3, :y 4}
 {:x 4, :y 3}
 {:x 3, :y 5}
 {:x 3, :y 6}
 {:x 3, :y 7}
 {:x 3, :y 8}
 {:x 3, :y 9}
 {:x 3, :y 10}
 {:x 4, :y 0}
 {:x 5, :y 3}
 {:x 5, :y 0}
 {:x 6, :y 3}
 {:x 6, :y 0}
 {:x 7, :y 3}
 {:x 7, :y 0}
 {:x 8, :y 3}
 {:x 8, :y 0}
 {:x 9, :y 3}
 {:x 9, :y 0}
 {:x 0, :y 4}
 {:x 10, :y 3}
 {:x 0, :y 5}
 {:x 0, :y 6}
 {:x 0, :y 7}
 {:x 0, :y 8}
 {:x 0, :y 9}
 {:x 0, :y 10}
 {:x 10, :y 0}]
clj꞉hench.space꞉> 
(def hazaborder (vec (apply concat (mapv #(expand-case % haza 11 11) haza))))
#'hench.space/hazaborder
clj꞉hench.space꞉> 
(def obs [{:x 0 :y 4}
          {:x 0 :y 5}
          {:x 0 :y 6}
          {:x 0 :y 7}
          {:x 0 :y 8}
          {:x 0 :y 9}
          {:x 0 :y 10}
          {:x 8 :y 4}
          {:x 9 :y 4}
          {:x 10 :y 4}
          ])
#'hench.space/obs
clj꞉hench.space꞉> 
; Evaluating file: food.clj
#'hench.food/recenter
clj꞉hench.food꞉> 
(def obs1 [{:x 0 :y 4}
          {:x 0 :y 5}
          {:x 0 :y 6}
          {:x 0 :y 7}
          {:x 0 :y 8}
          {:x 0 :y 9}
          {:x 0 :y 10}
          {:x 8 :y 4}
          {:x 9 :y 4}
          {:x 10 :y 4}
          ])
#'hench.food/obs1
clj꞉hench.food꞉> (visible? {:x 8 :y 5} obs1 {:x 10 :y 3})
false
clj꞉hench.food꞉> (sort-by count [1] [1 2 3] [1 2])
; Execution error (ArityException) at hench.food/eval26173 (REPL:934).
; Wrong number of args (4) passed to: clojure.core/sort-by
clj꞉hench.food꞉> 
(sort-by count [[1] [1 2 3] [1 2]])
([1] [1 2] [1 2 3])
clj꞉hench.food꞉> 
(first (sort-by count [[1 0 2 2] [1 2 3] [1 2]]))
[1 2]
clj꞉hench.food꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> (convex-hull [{:x 0 :y 0} {:x 10 :y 10}])
[{:x 10, :y 10} {:x 10, :y 0} {:x 0, :y 10} {:x 0, :y 0}]
clj꞉hench.utils꞉> 
(convex-hull [{:x 0 :y 0} {:x 5 :y 5} {:x 10 :y 10}])
[{:x 0, :y 0}
 {:x 0, :y 1}
 {:x 0, :y 2}
 {:x 0, :y 3}
 {:x 0, :y 4}
 {:x 0, :y 5}
 {:x 0, :y 6}
 {:x 0, :y 7}
 {:x 0, :y 8}
 {:x 0, :y 9}
 {:x 0, :y 10}
 {:x 1, :y 0}
 {:x 1, :y 1}
 {:x 1, :y 2}
 {:x 1, :y 3}
 {:x 1, :y 4}
 {:x 1, :y 5}
 {:x 1, :y 6}
 {:x 1, :y 7}
 {:x 1, :y 8}
 {:x 1, :y 9}
 {:x 1, :y 10}
 {:x 2, :y 0}
 {:x 2, :y 1}
 {:x 2, :y 2}
 {:x 2, :y 3}
 {:x 2, :y 4}
 {:x 2, :y 5}
 {:x 2, :y 6}
 {:x 2, :y 7}
 {:x 2, :y 8}
 {:x 2, :y 9}
 {:x 2, :y 10}
 {:x 3, :y 0}
 {:x 3, :y 1}
 {:x 3, :y 2}
 {:x 3, :y 3}
 {:x 3, :y 4}
 {:x 3, :y 5}
 {:x 3, :y 6}
 {:x 3, :y 7}
 {:x 3, :y 8}
 {:x 3, :y 9}
 {:x 3, :y 10}
 {:x 4, :y 0}
 {:x 4, :y 1}
 {:x 4, :y 2}
 {:x 4, :y 3}
 {:x 4, :y 4}
 {:x 4, :y 5}
 ...]
clj꞉hench.utils꞉> 
(convex-hull [{:x 0 :y 0} {:x 2 :y 2} {:x 10 :y 10}])
[{:x 0, :y 0}
 {:x 0, :y 1}
 {:x 0, :y 2}
 {:x 0, :y 3}
 {:x 0, :y 4}
 {:x 0, :y 5}
 {:x 0, :y 6}
 {:x 0, :y 7}
 {:x 0, :y 8}
 {:x 0, :y 9}
 {:x 0, :y 10}
 {:x 1, :y 0}
 {:x 1, :y 1}
 {:x 1, :y 2}
 {:x 1, :y 3}
 {:x 1, :y 4}
 {:x 1, :y 5}
 {:x 1, :y 6}
 {:x 1, :y 7}
 {:x 1, :y 8}
 {:x 1, :y 9}
 {:x 1, :y 10}
 {:x 2, :y 0}
 {:x 2, :y 1}
 {:x 2, :y 2}
 {:x 2, :y 3}
 {:x 2, :y 4}
 {:x 2, :y 5}
 {:x 2, :y 6}
 {:x 2, :y 7}
 {:x 2, :y 8}
 {:x 2, :y 9}
 {:x 2, :y 10}
 {:x 3, :y 0}
 {:x 3, :y 1}
 {:x 3, :y 2}
 {:x 3, :y 3}
 {:x 3, :y 4}
 {:x 3, :y 5}
 {:x 3, :y 6}
 {:x 3, :y 7}
 {:x 3, :y 8}
 {:x 3, :y 9}
 {:x 3, :y 10}
 {:x 4, :y 0}
 {:x 4, :y 1}
 {:x 4, :y 2}
 {:x 4, :y 3}
 {:x 4, :y 4}
 {:x 4, :y 5}
 ...]
clj꞉hench.utils꞉> 
