; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.27.4"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> (d {:x 1 :y 1} {:x 10 :y 10})
11
clj꞉hench.utils꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
; Evaluating file: space.clj
#'hench.space/wrapped-mode
clj꞉hench.space꞉> (all-obstacles sample (-> sample :you))
[{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 5, :y 4} {:x 5, :y 3} {:x 6, :y 3}]
clj꞉hench.space꞉> (def a 1)
#'hench.space/a
clj꞉hench.space꞉> - a
1
clj꞉hench.space꞉> 
(- a)
-1
clj꞉hench.space꞉> (mod 5 4)
1
clj꞉hench.food꞉> 
(mod (inc 4) 4)
1
clj꞉hench.food꞉> 
(mod (inc 3) 4)
0
clj꞉hench.food꞉> (mod (dec 0) 4)
3
clj꞉hench.food꞉> 
