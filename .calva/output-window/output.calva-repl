; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.27.4"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: path.clj
#'hench.path/n->c
clj꞉hench.path꞉> (c->n "1 1")
" "
clj꞉hench.path꞉> 
(c->n {:x 1 :y 2})
"1 2"
clj꞉hench.path꞉> 
(n->c "1 2")
{:x 1, :y 2}
clj꞉hench.path꞉> 
(range 0 10)
(0 1 2 3 4 5 6 7 8 9)
clj꞉hench.path꞉> 
#'hench.path/neighbours
clj꞉hench.path꞉> (neighbours {:x 1 :y 1})
; Execution error (IllegalArgumentException) at hench.path/neighbours (REPL:71).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉hench.path꞉> 
#'hench.path/neighbours
clj꞉hench.path꞉> 
(neighbours {:x 1 :y 1})
; Execution error (IllegalArgumentException) at hench.path/neighbours (REPL:72).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉hench.path꞉> (update-in {:x 1 :y 1} :x inc)
; Execution error (IllegalArgumentException) at hench.path/eval8018 (REPL:45).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉hench.path꞉> 
#'hench.path/neighbours
clj꞉hench.path꞉> 
(neighbours {:x 1 :y 1})
; Execution error (ArityException) at hench.path/neighbours (REPL:71).
; Wrong number of args (5) passed to: clojure.core/into
clj꞉hench.path꞉> 
#'hench.path/neighbours
clj꞉hench.path꞉> 
(neighbours {:x 1 :y 1})
[{:x 2, :y 1} {:x 1, :y 2} {:x 0, :y 1} {:x 1, :y 0}]
clj꞉hench.path꞉> 
#'hench.path/neighbours
clj꞉hench.path꞉> 
(neighbours {:x 1 :y 1})
#{{:x 2, :y 1} {:x 1, :y 0} {:x 1, :y 2} {:x 0, :y 1}}
clj꞉hench.path꞉> 
#'hench.path/neighbours
clj꞉hench.path꞉> 
(neighbours {:x 1 :y 1})
#{"1 2" "1 0" "0 1" "2 1"}
clj꞉hench.path꞉> 
#'hench.path/board->graph
clj꞉hench.path꞉> (def sample {:game {:id "game-00fe20da-94ad-11ea-bb37"
                                     :ruleset {:name "standard"
                                               :version "v.1.2.3"}
                                     :timeout 500}
                              :turn 14
                              :board {:height 11
                                      :width 11
                                      :food [{:x 0, :y 2}
                                             {:x 2, :y 0}
                                             {:x 5, :y 5}
                                             {:x 9, :y 0}
                                             {:x 2, :y 6}]
                                      :hazards [{:x 0, :y 3}
                                                {:x 0, :y 1}
                                                {:x 3, :y 2}]
                                      :snakes [{:id "snake-508e96ac-94ad-11ea-bb37"
                                                :name "My Snake"
                                                :health 54
                                                :body [{:x 0, :y 1}
                                                       {:x 1, :y 1}
                                                       {:x 2, :y 1}
                                                       {:x 2, :y 0}
                                                       {:x 3, :y 0}]
                                                :latency "111"
                                                :head {:x 0, :y 1}
                                                :length 5
                                                :shout "why are we shouting??"
                                                :squad ""}
                                               {:id "snake-b67f4906-94ae-11ea-bb37"
                                                :name "Another Snake"
                                                :health 56
                                                :body [{:x 5, :y 4}
                                                       {:x 5, :y 3}
                                                       {:x 6, :y 3}
                                                       {:x 6, :y 2}]
                                                :latency "222"
                                                :head {:x 5, :y 4}
                                                :length 4
                                                :shout "I'm not really sure..."
                                                :squad ""}]}
                              :you {:id "snake-508e96ac-94ad-11ea-bb37"
                                    :name "My Snake"
                                    :health 54
                                    :body [{:x 0, :y 1}
                                           {:x 1, :y 1}
                                           {:x 2, :y 1}
                                           {:x 2, :y 0}
                                           {:x 3, :y 0}]
                                    :latency "111"
                                    :head {:x 0, :y 1}
                                    :length 5
                                    :shout "why are we shouting??"
                                    :squad ""}})
#'hench.space/sample
clj꞉hench.space꞉> 
#'hench.path/board->graph
clj꞉hench.path꞉> (def sample {:game {:id "game-00fe20da-94ad-11ea-bb37"
                                     :ruleset {:name "standard"
                                               :version "v.1.2.3"}
                                     :timeout 500}
                              :turn 14
                              :board {:height 11
                                      :width 11
                                      :food [{:x 0, :y 2}
                                             {:x 2, :y 0}
                                             {:x 5, :y 5}
                                             {:x 9, :y 0}
                                             {:x 2, :y 6}]
                                      :hazards [{:x 0, :y 3}
                                                {:x 0, :y 1}
                                                {:x 3, :y 2}]
                                      :snakes [{:id "snake-508e96ac-94ad-11ea-bb37"
                                                :name "My Snake"
                                                :health 54
                                                :body [{:x 0, :y 1}
                                                       {:x 1, :y 1}
                                                       {:x 2, :y 1}
                                                       {:x 2, :y 0}
                                                       {:x 3, :y 0}]
                                                :latency "111"
                                                :head {:x 0, :y 1}
                                                :length 5
                                                :shout "why are we shouting??"
                                                :squad ""}
                                               {:id "snake-b67f4906-94ae-11ea-bb37"
                                                :name "Another Snake"
                                                :health 56
                                                :body [{:x 5, :y 4}
                                                       {:x 5, :y 3}
                                                       {:x 6, :y 3}
                                                       {:x 6, :y 2}
                                                       {:x 6, :y 1}]
                                                :latency "222"
                                                :head {:x 5, :y 4}
                                                :length 5
                                                :shout "I'm not really sure..."
                                                :squad ""}]}
                              :you {:id "snake-508e96ac-94ad-11ea-bb37"
                                    :name "My Snake"
                                    :health 54
                                    :body [{:x 0, :y 1}
                                           {:x 1, :y 1}
                                           {:x 2, :y 1}
                                           {:x 2, :y 0}
                                           {:x 3, :y 0}]
                                    :latency "111"
                                    :head {:x 0, :y 1}
                                    :length 5
                                    :shout "why are we shouting??"
                                    :squad ""}})
#'hench.path/sample
clj꞉hench.path꞉> (board->graph sample)
; Execution error (ClassCastException) at hench.path/board->graph$iter$fn$iter$fn$fn (REPL:84).
; class java.lang.String cannot be cast to class clojure.lang.IFn (java.lang.String is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉hench.path꞉> 
#'hench.path/board->graph
clj꞉hench.path꞉> 
(board->graph sample)
nil
clj꞉hench.path꞉> 
#'hench.path/board->graph
clj꞉hench.path꞉> 
(board->graph sample)
{"6 5" #{"7 5" "6 4" "5 5" "6 6"},
 "2 10" #{"2 11" "3 10" "1 10" "2 9"},
 "7 5" #{"6 5" "7 6" "8 5" "7 4"},
 "7 9" #{"7 10" "8 9" "6 9" "7 8"},
 "6 0" #{"5 0" "7 0" "6 -1" "6 1"},
 "5 0" #{"6 0" "5 1" "4 0" "5 -1"},
 "1 2" #{"2 2" "0 2" "1 3" "1 1"},
 "8 7" #{"7 7" "8 8" "9 7" "8 6"},
 "3 1" #{"4 1" "3 0" "3 2" "2 1"},
 "5 6" #{"5 5" "4 6" "6 6" "5 7"},
 "8 10" #{"7 10" "9 10" "8 9" "8 11"},
 "3 8" #{"3 9" "2 8" "4 8" "3 7"},
 "7 10" #{"7 9" "8 10" "6 10" "7 11"},
 "3 3" #{"4 3" "3 4" "3 2" "2 3"},
 "5 2" #{"5 3" "5 1" "6 2" "4 2"},
 "0 3" #{"-1 3" "0 2" "0 4" "1 3"},
 "1 0" #{"1 -1" "0 0" "1 1" "2 0"},
 "7 2" #{"7 1" "8 2" "7 3" "6 2"},
 "5 8" #{"5 9" "6 8" "5 7" "4 8"},
 "5 3" #{"5 2" "4 3" "5 4" "6 3"},
 "7 1" #{"7 2" "7 0" "6 1" "8 1"},
 "9 10" #{"8 10" "9 11" "10 10" "9 9"},
 "6 4" #{"6 5" "5 4" "7 4" "6 3"},
 "4 3" #{"3 3" "5 3" "4 4" "4 2"},
 "7 6" #{"7 5" "7 7" "6 6" "8 6"},
 "10 8" #{"11 8" "10 7" "9 8" "10 9"},
 "2 2" #{"1 2" "3 2" "2 3" "2 1"},
 "3 10" #{"2 10" "3 9" "4 10" "3 11"},
 "3 5" #{"2 5" "3 4" "3 6" "4 5"},
 "9 3" #{"8 3" "10 3" "9 2" "9 4"},
 "7 0" #{"6 0" "7 1" "7 -1" "8 0"},
 "7 7" #{"8 7" "7 6" "7 8" "6 7"},
 "8 9" #{"7 9" "8 10" "8 8" "9 9"},
 "8 5" #{"7 5" "9 5" "8 4" "8 6"},
 "5 5" #{"6 5" "5 6" "5 4" "4 5"},
 "3 9" #{"3 8" "3 10" "4 9" "2 9"},
 "6 9" #{"7 9" "6 10" "5 9" "6 8"},
 "5 4" #{"5 3" "6 4" "5 5" "4 4"},
 "1 10" #{"2 10" "0 10" "1 9" "1 11"},
 "0 1" #{"-1 1" "0 2" "0 0" "1 1"},
 "2 5" #{"3 5" "2 4" "2 6" "1 5"},
 "10 7" #{"11 7" "10 8" "9 7" "10 6"},
 "2 8" #{"3 8" "1 8" "2 7" "2 9"},
 "8 2" #{"7 2" "8 3" "8 1" "9 2"},
 "4 1" #{"3 1" "5 1" "4 0" "4 2"},
 "10 5" #{"11 5" "10 4" "9 5" "10 6"},
 "6 10" #{"7 10" "6 9" "6 11" "5 10"},
 "6 1" #{"6 0" "7 1" "5 1" "6 2"},
 "8 3" #{"9 3" "8 2" "7 3" "8 4"},
 "0 7" #{"1 7" "-1 7" "0 8" "0 6"},
 ...}
clj꞉hench.path꞉> 
; Syntax error compiling at (src/hench/path.clj:84:22).
; Unable to resolve symbol: height in this context
clj꞉hench.path꞉> 
#'hench.path/board->graph
clj꞉hench.path꞉> 
(board->graph sample)
; Execution error (ArityException) at hench.path/board->graph$iter$fn$iter$fn$fn (REPL:85).
; Wrong number of args (3) passed to: hench.path/neighbours
clj꞉hench.path꞉> 
#'hench.path/neighbours
clj꞉hench.path꞉> 
(board->graph sample)
{"6 5" #{"7 5" "6 4" "5 5" "6 6"},
 "2 10" #{"3 10" "1 10" "2 0" "2 9"},
 "7 5" #{"6 5" "7 6" "8 5" "7 4"},
 "7 9" #{"7 10" "8 9" "6 9" "7 8"},
 "6 0" #{"5 0" "7 0" "6 10" "6 1"},
 "5 0" #{"6 0" "5 1" "4 0" "5 10"},
 "1 2" #{"2 2" "0 2" "1 3" "1 1"},
 "8 7" #{"7 7" "8 8" "9 7" "8 6"},
 "3 1" #{"4 1" "3 0" "3 2" "2 1"},
 "5 6" #{"5 5" "4 6" "6 6" "5 7"},
 "8 10" #{"7 10" "9 10" "8 9" "8 0"},
 "3 8" #{"3 9" "2 8" "4 8" "3 7"},
 "7 10" #{"7 9" "8 10" "7 0" "6 10"},
 "3 3" #{"4 3" "3 4" "3 2" "2 3"},
 "5 2" #{"5 3" "5 1" "6 2" "4 2"},
 "0 3" #{"10 3" "0 2" "0 4" "1 3"},
 "1 0" #{"1 10" "0 0" "1 1" "2 0"},
 "7 2" #{"7 1" "8 2" "7 3" "6 2"},
 "5 8" #{"5 9" "6 8" "5 7" "4 8"},
 "5 3" #{"5 2" "4 3" "5 4" "6 3"},
 "7 1" #{"7 2" "7 0" "6 1" "8 1"},
 "9 10" #{"8 10" "9 0" "10 10" "9 9"},
 "6 4" #{"6 5" "5 4" "7 4" "6 3"},
 "4 3" #{"3 3" "5 3" "4 4" "4 2"},
 "7 6" #{"7 5" "7 7" "6 6" "8 6"},
 "10 8" #{"10 7" "9 8" "10 9" "0 8"},
 "2 2" #{"1 2" "3 2" "2 3" "2 1"},
 "3 10" #{"2 10" "3 9" "4 10" "3 0"},
 "3 5" #{"2 5" "3 4" "3 6" "4 5"},
 "9 3" #{"8 3" "10 3" "9 2" "9 4"},
 "7 0" #{"6 0" "7 10" "7 1" "8 0"},
 "7 7" #{"8 7" "7 6" "7 8" "6 7"},
 "8 9" #{"7 9" "8 10" "8 8" "9 9"},
 "8 5" #{"7 5" "9 5" "8 4" "8 6"},
 "5 5" #{"6 5" "5 6" "5 4" "4 5"},
 "3 9" #{"3 8" "3 10" "4 9" "2 9"},
 "6 9" #{"7 9" "6 10" "5 9" "6 8"},
 "5 4" #{"5 3" "6 4" "5 5" "4 4"},
 "1 10" #{"2 10" "1 0" "0 10" "1 9"},
 "0 1" #{"0 2" "10 1" "0 0" "1 1"},
 "2 5" #{"3 5" "2 4" "2 6" "1 5"},
 "10 7" #{"10 8" "0 7" "9 7" "10 6"},
 "2 8" #{"3 8" "1 8" "2 7" "2 9"},
 "8 2" #{"7 2" "8 3" "8 1" "9 2"},
 "4 1" #{"3 1" "5 1" "4 0" "4 2"},
 "10 5" #{"10 4" "9 5" "10 6" "0 5"},
 "6 10" #{"6 0" "7 10" "6 9" "5 10"},
 "6 1" #{"6 0" "7 1" "5 1" "6 2"},
 "8 3" #{"9 3" "8 2" "7 3" "8 4"},
 "0 7" #{"10 7" "1 7" "0 8" "0 6"},
 ...}
clj꞉hench.path꞉> (concat [1 2] [3 4] [5 6 7])
(1 2 3 4 5 6 7)
clj꞉hench.food꞉> 
#'hench.path/snaky
clj꞉hench.path꞉> (snaky sample)
[{:x 0, :y 1} {:x 5, :y 4} {:x 5, :y 3} {:x 6, :y 3}]
clj꞉hench.path꞉> 
#'hench.path/snaky
clj꞉hench.path꞉> 
(snaky sample)
[{:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0} {:x 5, :y 4} {:x 5, :y 3} {:x 6, :y 3}]
clj꞉hench.path꞉> (def sample {:game {:id "game-00fe20da-94ad-11ea-bb37"
                                     :ruleset {:name "standard"
                                               :version "v.1.2.3"}
                                     :timeout 500}
                              :turn 14
                              :board {:height 11
                                      :width 11
                                      :food [{:x 0, :y 2}
                                             {:x 2, :y 0}
                                             {:x 5, :y 5}
                                             {:x 9, :y 0}
                                             {:x 2, :y 6}]
                                      :hazards [{:x 0, :y 3}
                                                {:x 0, :y 1}
                                                {:x 3, :y 2}]
                                      :snakes [{:id "snake-508e96ac-94ad-11ea-bb37"
                                                :name "My Snake"
                                                :health 54
                                                :body [{:x 0, :y 1}
                                                       {:x 1, :y 1}
                                                       {:x 2, :y 1}
                                                       {:x 2, :y 0}
                                                       {:x 3, :y 0}]
                                                :latency "111"
                                                :head {:x 0, :y 1}
                                                :length 5
                                                :shout "why are we shouting??"
                                                :squad ""}
                                               {:id "snake-b67f4906-94ae-11ea-bb37"
                                                :name "Another Snake"
                                                :health 56
                                                :body [{:x 5, :y 4}
                                                       {:x 5, :y 3}
                                                       {:x 6, :y 3}
                                                       {:x 6, :y 2}
                                                       {:x 6, :y 1}]
                                                :latency "222"
                                                :head {:x 5, :y 4}
                                                :length 5
                                                :shout "I'm not really sure..."
                                                :squad ""}]}
                              :you {:id "snake-508e96ac-94ad-11ea-bb37"
                                    :name "My Snake"
                                    :health 54
                                    :body [{:x 0, :y 1}
                                           {:x 1, :y 1}
                                           {:x 2, :y 1}
                                           {:x 2, :y 0}
                                           {:x 3, :y 0}]
                                    :latency "111"
                                    :head {:x 0, :y 1}
                                    :length 5
                                    :shout "why are we shouting??"
                                    :squad ""}})
#'hench.path/sample
clj꞉hench.path꞉> 
(snaky sample)
[{:x 1, :y 1}
 {:x 2, :y 1}
 {:x 2, :y 0}
 {:x 3, :y 0}
 {:x 6, :y 4}
 {:x 4, :y 4}
 {:x 5, :y 5}
 {:x 5, :y 4}
 {:x 5, :y 3}
 {:x 6, :y 3}
 {:x 6, :y 2}]
clj꞉hench.path꞉> 
#'hench.path/snaky
clj꞉hench.path꞉> 
(snaky sample)
[{:x 1, :y 1}
 {:x 2, :y 1}
 {:x 2, :y 0}
 {:x 6, :y 4}
 {:x 4, :y 4}
 {:x 5, :y 5}
 {:x 5, :y 4}
 {:x 5, :y 3}
 {:x 6, :y 3}
 {:x 6, :y 2}]
clj꞉hench.path꞉> 
#'hench.path/board->graph
clj꞉hench.path꞉> (board->graph sample)
{"6 5" #{"7 5" "6 4" "5 5" "6 6"},
 "2 10" #{"3 10" "1 10" "2 0" "2 9"},
 "7 5" #{"6 5" "7 6" "8 5" "7 4"},
 "7 9" #{"7 10" "8 9" "6 9" "7 8"},
 "6 0" #{"5 0" "7 0" "6 10" "6 1"},
 "5 0" #{"6 0" "5 1" "4 0" "5 10"},
 "1 2" #{"2 2" "0 2" "1 3" "1 1"},
 "8 7" #{"7 7" "8 8" "9 7" "8 6"},
 "3 1" #{"4 1" "3 0" "3 2" "2 1"},
 "5 6" #{"5 5" "4 6" "6 6" "5 7"},
 "8 10" #{"7 10" "9 10" "8 9" "8 0"},
 "3 8" #{"3 9" "2 8" "4 8" "3 7"},
 "7 10" #{"7 9" "8 10" "7 0" "6 10"},
 "3 3" #{"4 3" "3 4" "3 2" "2 3"},
 "5 2" #{"5 3" "5 1" "6 2" "4 2"},
 "0 3" #{"10 3" "0 2" "0 4" "1 3"},
 "1 0" #{"1 10" "0 0" "1 1" "2 0"},
 "7 2" #{"7 1" "8 2" "7 3" "6 2"},
 "5 8" #{"5 9" "6 8" "5 7" "4 8"},
 "5 3" #{"5 2" "4 3" "5 4" "6 3"},
 "7 1" #{"7 2" "7 0" "6 1" "8 1"},
 "9 10" #{"8 10" "9 0" "10 10" "9 9"},
 "6 4" #{"6 5" "5 4" "7 4" "6 3"},
 "4 3" #{"3 3" "5 3" "4 4" "4 2"},
 "7 6" #{"7 5" "7 7" "6 6" "8 6"},
 "10 8" #{"10 7" "9 8" "10 9" "0 8"},
 "2 2" #{"1 2" "3 2" "2 3" "2 1"},
 "3 10" #{"2 10" "3 9" "4 10" "3 0"},
 "3 5" #{"2 5" "3 4" "3 6" "4 5"},
 "9 3" #{"8 3" "10 3" "9 2" "9 4"},
 "7 0" #{"6 0" "7 10" "7 1" "8 0"},
 "7 7" #{"8 7" "7 6" "7 8" "6 7"},
 "8 9" #{"7 9" "8 10" "8 8" "9 9"},
 "8 5" #{"7 5" "9 5" "8 4" "8 6"},
 "5 5" #{"6 5" "5 6" "5 4" "4 5"},
 "3 9" #{"3 8" "3 10" "4 9" "2 9"},
 "6 9" #{"7 9" "6 10" "5 9" "6 8"},
 "5 4" #{"5 3" "6 4" "5 5" "4 4"},
 "1 10" #{"2 10" "1 0" "0 10" "1 9"},
 "0 1" #{"0 2" "10 1" "0 0" "1 1"},
 "2 5" #{"3 5" "2 4" "2 6" "1 5"},
 "10 7" #{"10 8" "0 7" "9 7" "10 6"},
 "2 8" #{"3 8" "1 8" "2 7" "2 9"},
 "8 2" #{"7 2" "8 3" "8 1" "9 2"},
 "4 1" #{"3 1" "5 1" "4 0" "4 2"},
 "10 5" #{"10 4" "9 5" "10 6" "0 5"},
 "6 10" #{"6 0" "7 10" "6 9" "5 10"},
 "6 1" #{"6 0" "7 1" "5 1" "6 2"},
 "8 3" #{"9 3" "8 2" "7 3" "8 4"},
 "0 7" #{"10 7" "1 7" "0 8" "0 6"},
 ...}
clj꞉hench.path꞉> (some % [1 2 3 4]) 1
1
clj꞉hench.path꞉> 
; Syntax error compiling at (src/hench/path.clj:109:62).
; Unable to resolve symbol: in? in this context
clj꞉hench.path꞉> 
#'hench.path/in?
clj꞉hench.path꞉> 
#'hench.path/board->graph
clj꞉hench.path꞉> 
(board->graph sample)
; Execution error (ArityException) at hench.path/board->graph$iter$fn$iter$fn$fn (REPL:109).
; Wrong number of args (4) passed to: hench.path/neighbours
clj꞉hench.path꞉> 
#'hench.path/neighbours
clj꞉hench.path꞉> 
(board->graph sample)
; Execution error (NullPointerException) at hench.utils/add (utils.clj:19).
; null
clj꞉hench.path꞉> 
(board->graph sample)
; Execution error (NullPointerException) at hench.utils/add (utils.clj:19).
; null
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/cost
clj꞉hench.path꞉> 
(board->graph sample)
c:  #function[hench.path/board->graph/iter--8886--8892/fn--8893/iter--8888--8894/fn--8895/fn--8896/fn--8897]
; Execution error (NullPointerException) at hench.utils/add (utils.clj:19).
; null
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/cost
clj꞉hench.path꞉> 
(board->graph sample)
c:  {:x 0, :y 0}
c:  {:x 0, :y 1}
c:  {:x 0, :y 2}
c:  {:x 0, :y 3}
c:  {:x 0, :y 4}
c:  {:x 0, :y 5}
c:  {:x 0, :y 6}
c:  {:x 0, :y 7}
c:  {:x 0, :y 8}
c:  {:x 0, :y 9}
c:  {:x 0, :y 10}
c:  {:x 1, :y 0}
c:  {:x 1, :y 1}
c:  {:x 1, :y 2}
c:  {:x 1, :y 3}
c:  {:x 1, :y 4}
c:  {:x 1, :y 5}
c:  {:x 1, :y 6}
c:  {:x 1, :y 7}
c:  {:x 1, :y 8}
c:  {:x 1, :y 9}
c:  {:x 1, :y 10}
c:  {:x 2, :y 0}
c:  {:x 2, :y 1}
c:  {:x 2, :y 2}
c:  {:x 2, :y 3}
c:  {:x 2, :y 4}
c:  {:x 2, :y 5}
c:  {:x 2, :y 6}
c:  {:x 2, :y 7}
c:  {:x 2, :y 8}
c:  {:x 2, :y 9}
c:  {:x 2, :y 10}
c:  {:x 3, :y 0}
c:  {:x 3, :y 1}
c:  {:x 3, :y 2}
c:  {:x 3, :y 3}
c:  {:x 3, :y 4}
c:  {:x 3, :y 5}
c:  {:x 3, :y 6}
c:  {:x 3, :y 7}
c:  {:x 3, :y 8}
c:  {:x 3, :y 9}
c:  {:x 3, :y 10}
c:  {:x 4, :y 0}
c:  {:x 4, :y 1}
c:  {:x 4, :y 2}
c:  {:x 4, :y 3}
c:  {:x 4, :y 4}
c:  {:x 4, :y 5}
c:  {:x 4, :y 6}
c:  {:x 4, :y 7}
c:  {:x 4, :y 8}
c:  {:x 4, :y 9}
c:  {:x 4, :y 10}
c:  {:x 5, :y 0}
c:  {:x 5, :y 1}
c:  {:x 5, :y 2}
c:  {:x 5, :y 3}
c:  {:x 5, :y 4}
c:  {:x 5, :y 5}
c:  {:x 5, :y 6}
c:  {:x 5, :y 7}
c:  {:x 5, :y 8}
c:  {:x 5, :y 9}
c:  {:x 5, :y 10}
c:  {:x 6, :y 0}
c:  {:x 6, :y 1}
c:  {:x 6, :y 2}
c:  {:x 6, :y 3}
c:  {:x 6, :y 4}
c:  {:x 6, :y 5}
c:  {:x 6, :y 6}
c:  {:x 6, :y 7}
c:  {:x 6, :y 8}
c:  {:x 6, :y 9}
c:  {:x 6, :y 10}
c:  {:x 7, :y 0}
c:  {:x 7, :y 1}
c:  {:x 7, :y 2}
c:  {:x 7, :y 3}
c:  {:x 7, :y 4}
c:  {:x 7, :y 5}
c:  {:x 7, :y 6}
c:  {:x 7, :y 7}
c:  {:x 7, :y 8}
c:  {:x 7, :y 9}
c:  {:x 7, :y 10}
c:  {:x 8, :y 0}
c:  {:x 8, :y 1}
c:  {:x 8, :y 2}
c:  {:x 8, :y 3}
c:  {:x 8, :y 4}
c:  {:x 8, :y 5}
c:  {:x 8, :y 6}
c:  {:x 8, :y 7}
c:  {:x 8, :y 8}
c:  {:x 8, :y 9}
c:  {:x 8, :y 10}
c:  {:x 9, :y 0}
c:  {:x 9, :y 1}
c:  {:x 9, :y 2}
c:  {:x 9, :y 3}
c:  {:x 9, :y 4}
c:  {:x 9, :y 5}
c:  {:x 9, :y 6}
c:  {:x 9, :y 7}
c:  {:x 9, :y 8}
c:  {:x 9, :y 9}
c:  {:x 9, :y 10}
c:  {:x 10, :y 0}
c:  {:x 10, :y 1}
c:  {:x 10, :y 2}
c:  {:x 10, :y 3}
c:  {:x 10, :y 4}
c:  {:x 10, :y 5}
c:  {:x 10, :y 6}
c:  {:x 10, :y 7}
c:  {:x 10, :y 8}
c:  {:x 10, :y 9}
c:  {:x 10, :y 10}
{"6 5" #{"7 5" "6 6"},
 "2 10" #{"3 10" "1 10" "2 9"},
 "7 5" #{"6 5" "7 6" "8 5" "7 4"},
 "7 9" #{"7 10" "8 9" "6 9" "7 8"},
 "6 0" #{"5 0" "7 0" "6 10" "6 1"},
 "5 0" #{"6 0" "5 1" "4 0" "5 10"},
 "1 2" #{"2 2" "0 2" "1 3"},
 "8 7" #{"7 7" "8 8" "9 7" "8 6"},
 "3 1" #{"4 1" "3 0" "3 2"},
 "5 6" #{"4 6" "6 6" "5 7"},
 "8 10" #{"7 10" "9 10" "8 9" "8 0"},
 "3 8" #{"3 9" "2 8" "4 8" "3 7"},
 "7 10" #{"7 9" "8 10" "7 0" "6 10"},
 "3 3" #{"4 3" "3 4" "3 2" "2 3"},
 "5 2" #{"5 1" "4 2"},
 "0 3" #{"10 3" "0 2" "0 4" "1 3"},
 "1 0" #{"1 10" "0 0"},
 "7 2" #{"7 1" "8 2" "7 3"},
 "5 8" #{"5 9" "6 8" "5 7" "4 8"},
 "5 3" #{"5 2" "4 3"},
 "7 1" #{"7 2" "7 0" "6 1" "8 1"},
 "9 10" #{"8 10" "9 0" "10 10" "9 9"},
 "6 4" #{"6 5" "7 4"},
 "4 3" #{"3 3" "4 2"},
 "7 6" #{"7 5" "7 7" "6 6" "8 6"},
 "10 8" #{"10 7" "9 8" "10 9" "0 8"},
 "2 2" #{"1 2" "3 2" "2 3"},
 "3 10" #{"2 10" "3 9" "4 10" "3 0"},
 "3 5" #{"2 5" "3 4" "3 6" "4 5"},
 "9 3" #{"8 3" "10 3" "9 2" "9 4"},
 "7 0" #{"6 0" "7 10" "7 1" "8 0"},
 "7 7" #{"8 7" "7 6" "7 8" "6 7"},
 "8 9" #{"7 9" "8 10" "8 8" "9 9"},
 "8 5" #{"7 5" "9 5" "8 4" "8 6"},
 "5 5" #{"6 5" "5 6" "4 5"},
 "3 9" #{"3 8" "3 10" "4 9" "2 9"},
 "6 9" #{"7 9" "6 10" "5 9" "6 8"},
 "5 4" #{},
 "1 10" #{"2 10" "1 0" "0 10" "1 9"},
 "0 1" #{"0 2" "10 1" "0 0"},
 "2 5" #{"3 5" "2 4" "2 6" "1 5"},
 "10 7" #{"10 8" "0 7" "9 7" "10 6"},
 "2 8" #{"3 8" "1 8" "2 7" "2 9"},
 "8 2" #{"7 2" "8 3" "8 1" "9 2"},
 "4 1" #{"3 1" "5 1" "4 0" "4 2"},
 "10 5" #{"10 4" "9 5" "10 6" "0 5"},
 "6 10" #{"6 0" "7 10" "6 9" "5 10"},
 "6 1" #{"6 0" "7 1" "5 1"},
 "8 3" #{"9 3" "8 2" "7 3" "8 4"},
 "0 7" #{"10 7" "1 7" "0 8" "0 6"},
 ...}
clj꞉hench.path꞉> 
#'hench.path/filter-keys
clj꞉hench.path꞉> 
(filter-keys (board->graph sample) (snaky sample))
c:  {:x 0, :y 0}
c:  {:x 0, :y 1}
c:  {:x 0, :y 2}
c:  {:x 0, :y 3}
c:  {:x 0, :y 4}
c:  {:x 0, :y 5}
c:  {:x 0, :y 6}
c:  {:x 0, :y 7}
c:  {:x 0, :y 8}
c:  {:x 0, :y 9}
c:  {:x 0, :y 10}
c:  {:x 1, :y 0}
c:  {:x 1, :y 1}
c:  {:x 1, :y 2}
c:  {:x 1, :y 3}
c:  {:x 1, :y 4}
c:  {:x 1, :y 5}
c:  {:x 1, :y 6}
c:  {:x 1, :y 7}
c:  {:x 1, :y 8}
c:  {:x 1, :y 9}
c:  {:x 1, :y 10}
c:  {:x 2, :y 0}
c:  {:x 2, :y 1}
c:  {:x 2, :y 2}
c:  {:x 2, :y 3}
c:  {:x 2, :y 4}
c:  {:x 2, :y 5}
c:  {:x 2, :y 6}
c:  {:x 2, :y 7}
c:  {:x 2, :y 8}
c:  {:x 2, :y 9}
c:  {:x 2, :y 10}
c:  {:x 3, :y 0}
c:  {:x 3, :y 1}
c:  {:x 3, :y 2}
c:  {:x 3, :y 3}
c:  {:x 3, :y 4}
c:  {:x 3, :y 5}
c:  {:x 3, :y 6}
c:  {:x 3, :y 7}
c:  {:x 3, :y 8}
c:  {:x 3, :y 9}
c:  {:x 3, :y 10}
c:  {:x 4, :y 0}
c:  {:x 4, :y 1}
c:  {:x 4, :y 2}
c:  {:x 4, :y 3}
c:  {:x 4, :y 4}
c:  {:x 4, :y 5}
c:  {:x 4, :y 6}
c:  {:x 4, :y 7}
c:  {:x 4, :y 8}
c:  {:x 4, :y 9}
c:  {:x 4, :y 10}
c:  {:x 5, :y 0}
c:  {:x 5, :y 1}
c:  {:x 5, :y 2}
c:  {:x 5, :y 3}
c:  {:x 5, :y 4}
c:  {:x 5, :y 5}
c:  {:x 5, :y 6}
c:  {:x 5, :y 7}
c:  {:x 5, :y 8}
c:  {:x 5, :y 9}
c:  {:x 5, :y 10}
c:  {:x 6, :y 0}
c:  {:x 6, :y 1}
c:  {:x 6, :y 2}
c:  {:x 6, :y 3}
c:  {:x 6, :y 4}
c:  {:x 6, :y 5}
c:  {:x 6, :y 6}
c:  {:x 6, :y 7}
c:  {:x 6, :y 8}
c:  {:x 6, :y 9}
c:  {:x 6, :y 10}
c:  {:x 7, :y 0}
c:  {:x 7, :y 1}
c:  {:x 7, :y 2}
c:  {:x 7, :y 3}
c:  {:x 7, :y 4}
c:  {:x 7, :y 5}
c:  {:x 7, :y 6}
c:  {:x 7, :y 7}
c:  {:x 7, :y 8}
c:  {:x 7, :y 9}
c:  {:x 7, :y 10}
c:  {:x 8, :y 0}
c:  {:x 8, :y 1}
c:  {:x 8, :y 2}
c:  {:x 8, :y 3}
c:  {:x 8, :y 4}
c:  {:x 8, :y 5}
c:  {:x 8, :y 6}
c:  {:x 8, :y 7}
c:  {:x 8, :y 8}
c:  {:x 8, :y 9}
c:  {:x 8, :y 10}
c:  {:x 9, :y 0}
c:  {:x 9, :y 1}
c:  {:x 9, :y 2}
c:  {:x 9, :y 3}
c:  {:x 9, :y 4}
c:  {:x 9, :y 5}
c:  {:x 9, :y 6}
c:  {:x 9, :y 7}
c:  {:x 9, :y 8}
c:  {:x 9, :y 9}
c:  {:x 9, :y 10}
c:  {:x 10, :y 0}
c:  {:x 10, :y 1}
c:  {:x 10, :y 2}
c:  {:x 10, :y 3}
c:  {:x 10, :y 4}
c:  {:x 10, :y 5}
c:  {:x 10, :y 6}
c:  {:x 10, :y 7}
c:  {:x 10, :y 8}
c:  {:x 10, :y 9}
c:  {:x 10, :y 10}
{"5 3" #{"5 2" "4 3"},
 "6 4" #{"6 5" "7 4"},
 "5 5" #{"6 5" "5 6" "4 5"},
 "5 4" #{},
 "6 2" #{"5 2" "7 2" "6 1"},
 "4 4" #{"4 3" "3 4" "4 5"},
 "6 3" #{"7 3"},
 "2 1" #{"3 1" "2 2"},
 "1 1" #{"1 2" "1 0" "0 1"},
 "2 0" #{"2 10" "1 0" "3 0"}}
clj꞉hench.path꞉> 
#'hench.path/filter-keys
clj꞉hench.path꞉> 
(filter-keys (board->graph sample) (snaky sample))
c:  {:x 0, :y 0}
c:  {:x 0, :y 1}
c:  {:x 0, :y 2}
c:  {:x 0, :y 3}
c:  {:x 0, :y 4}
c:  {:x 0, :y 5}
c:  {:x 0, :y 6}
c:  {:x 0, :y 7}
c:  {:x 0, :y 8}
c:  {:x 0, :y 9}
c:  {:x 0, :y 10}
c:  {:x 1, :y 0}
c:  {:x 1, :y 1}
c:  {:x 1, :y 2}
c:  {:x 1, :y 3}
c:  {:x 1, :y 4}
c:  {:x 1, :y 5}
c:  {:x 1, :y 6}
c:  {:x 1, :y 7}
c:  {:x 1, :y 8}
c:  {:x 1, :y 9}
c:  {:x 1, :y 10}
c:  {:x 2, :y 0}
c:  {:x 2, :y 1}
c:  {:x 2, :y 2}
c:  {:x 2, :y 3}
c:  {:x 2, :y 4}
c:  {:x 2, :y 5}
c:  {:x 2, :y 6}
c:  {:x 2, :y 7}
c:  {:x 2, :y 8}
c:  {:x 2, :y 9}
c:  {:x 2, :y 10}
c:  {:x 3, :y 0}
c:  {:x 3, :y 1}
c:  {:x 3, :y 2}
c:  {:x 3, :y 3}
c:  {:x 3, :y 4}
c:  {:x 3, :y 5}
c:  {:x 3, :y 6}
c:  {:x 3, :y 7}
c:  {:x 3, :y 8}
c:  {:x 3, :y 9}
c:  {:x 3, :y 10}
c:  {:x 4, :y 0}
c:  {:x 4, :y 1}
c:  {:x 4, :y 2}
c:  {:x 4, :y 3}
c:  {:x 4, :y 4}
c:  {:x 4, :y 5}
c:  {:x 4, :y 6}
c:  {:x 4, :y 7}
c:  {:x 4, :y 8}
c:  {:x 4, :y 9}
c:  {:x 4, :y 10}
c:  {:x 5, :y 0}
c:  {:x 5, :y 1}
c:  {:x 5, :y 2}
c:  {:x 5, :y 3}
c:  {:x 5, :y 4}
c:  {:x 5, :y 5}
c:  {:x 5, :y 6}
c:  {:x 5, :y 7}
c:  {:x 5, :y 8}
c:  {:x 5, :y 9}
c:  {:x 5, :y 10}
c:  {:x 6, :y 0}
c:  {:x 6, :y 1}
c:  {:x 6, :y 2}
c:  {:x 6, :y 3}
c:  {:x 6, :y 4}
c:  {:x 6, :y 5}
c:  {:x 6, :y 6}
c:  {:x 6, :y 7}
c:  {:x 6, :y 8}
c:  {:x 6, :y 9}
c:  {:x 6, :y 10}
c:  {:x 7, :y 0}
c:  {:x 7, :y 1}
c:  {:x 7, :y 2}
c:  {:x 7, :y 3}
c:  {:x 7, :y 4}
c:  {:x 7, :y 5}
c:  {:x 7, :y 6}
c:  {:x 7, :y 7}
c:  {:x 7, :y 8}
c:  {:x 7, :y 9}
c:  {:x 7, :y 10}
c:  {:x 8, :y 0}
c:  {:x 8, :y 1}
c:  {:x 8, :y 2}
c:  {:x 8, :y 3}
c:  {:x 8, :y 4}
c:  {:x 8, :y 5}
c:  {:x 8, :y 6}
c:  {:x 8, :y 7}
c:  {:x 8, :y 8}
c:  {:x 8, :y 9}
c:  {:x 8, :y 10}
c:  {:x 9, :y 0}
c:  {:x 9, :y 1}
c:  {:x 9, :y 2}
c:  {:x 9, :y 3}
c:  {:x 9, :y 4}
c:  {:x 9, :y 5}
c:  {:x 9, :y 6}
c:  {:x 9, :y 7}
c:  {:x 9, :y 8}
c:  {:x 9, :y 9}
c:  {:x 9, :y 10}
c:  {:x 10, :y 0}
c:  {:x 10, :y 1}
c:  {:x 10, :y 2}
c:  {:x 10, :y 3}
c:  {:x 10, :y 4}
c:  {:x 10, :y 5}
c:  {:x 10, :y 6}
c:  {:x 10, :y 7}
c:  {:x 10, :y 8}
c:  {:x 10, :y 9}
c:  {:x 10, :y 10}
{"6 5" #{"7 5" "6 6"},
 "2 10" #{"3 10" "1 10" "2 9"},
 "7 5" #{"6 5" "7 6" "8 5" "7 4"},
 "7 9" #{"7 10" "8 9" "6 9" "7 8"},
 "6 0" #{"5 0" "7 0" "6 10" "6 1"},
 "5 0" #{"6 0" "5 1" "4 0" "5 10"},
 "1 2" #{"2 2" "0 2" "1 3"},
 "8 7" #{"7 7" "8 8" "9 7" "8 6"},
 "3 1" #{"4 1" "3 0" "3 2"},
 "5 6" #{"4 6" "6 6" "5 7"},
 "8 10" #{"7 10" "9 10" "8 9" "8 0"},
 "3 8" #{"3 9" "2 8" "4 8" "3 7"},
 "7 10" #{"7 9" "8 10" "7 0" "6 10"},
 "3 3" #{"4 3" "3 4" "3 2" "2 3"},
 "5 2" #{"5 1" "4 2"},
 "0 3" #{"10 3" "0 2" "0 4" "1 3"},
 "1 0" #{"1 10" "0 0"},
 "7 2" #{"7 1" "8 2" "7 3"},
 "5 8" #{"5 9" "6 8" "5 7" "4 8"},
 "7 1" #{"7 2" "7 0" "6 1" "8 1"},
 "9 10" #{"8 10" "9 0" "10 10" "9 9"},
 "4 3" #{"3 3" "4 2"},
 "7 6" #{"7 5" "7 7" "6 6" "8 6"},
 "10 8" #{"10 7" "9 8" "10 9" "0 8"},
 "2 2" #{"1 2" "3 2" "2 3"},
 "3 10" #{"2 10" "3 9" "4 10" "3 0"},
 "3 5" #{"2 5" "3 4" "3 6" "4 5"},
 "9 3" #{"8 3" "10 3" "9 2" "9 4"},
 "7 0" #{"6 0" "7 10" "7 1" "8 0"},
 "7 7" #{"8 7" "7 6" "7 8" "6 7"},
 "8 9" #{"7 9" "8 10" "8 8" "9 9"},
 "8 5" #{"7 5" "9 5" "8 4" "8 6"},
 "3 9" #{"3 8" "3 10" "4 9" "2 9"},
 "6 9" #{"7 9" "6 10" "5 9" "6 8"},
 "1 10" #{"2 10" "1 0" "0 10" "1 9"},
 "0 1" #{"0 2" "10 1" "0 0"},
 "2 5" #{"3 5" "2 4" "2 6" "1 5"},
 "10 7" #{"10 8" "0 7" "9 7" "10 6"},
 "2 8" #{"3 8" "1 8" "2 7" "2 9"},
 "8 2" #{"7 2" "8 3" "8 1" "9 2"},
 "4 1" #{"3 1" "5 1" "4 0" "4 2"},
 "10 5" #{"10 4" "9 5" "10 6" "0 5"},
 "6 10" #{"6 0" "7 10" "6 9" "5 10"},
 "6 1" #{"6 0" "7 1" "5 1"},
 "8 3" #{"9 3" "8 2" "7 3" "8 4"},
 "0 7" #{"10 7" "1 7" "0 8" "0 6"},
 "7 4" #{"7 5" "7 3" "8 4"},
 "5 1" #{"5 0" "5 2" "4 1" "6 1"},
 "10 3" #{"0 3" "9 3" "10 4" "10 2"},
 "1 7" #{"0 7" "1 6" "1 8" "2 7"},
 ...}
clj꞉hench.path꞉> 
(filter-keys (board->graph sample) (snaky sample))
#'hench.path/board->graph
clj꞉hench.path꞉> 
(board->graph sample)
c:  {:x 0, :y 0}
c:  {:x 0, :y 1}
c:  {:x 0, :y 2}
c:  {:x 0, :y 3}
c:  {:x 0, :y 4}
c:  {:x 0, :y 5}
c:  {:x 0, :y 6}
c:  {:x 0, :y 7}
c:  {:x 0, :y 8}
c:  {:x 0, :y 9}
c:  {:x 0, :y 10}
c:  {:x 1, :y 0}
c:  {:x 1, :y 1}
c:  {:x 1, :y 2}
c:  {:x 1, :y 3}
c:  {:x 1, :y 4}
c:  {:x 1, :y 5}
c:  {:x 1, :y 6}
c:  {:x 1, :y 7}
c:  {:x 1, :y 8}
c:  {:x 1, :y 9}
c:  {:x 1, :y 10}
c:  {:x 2, :y 0}
c:  {:x 2, :y 1}
c:  {:x 2, :y 2}
c:  {:x 2, :y 3}
c:  {:x 2, :y 4}
c:  {:x 2, :y 5}
c:  {:x 2, :y 6}
c:  {:x 2, :y 7}
c:  {:x 2, :y 8}
c:  {:x 2, :y 9}
c:  {:x 2, :y 10}
c:  {:x 3, :y 0}
c:  {:x 3, :y 1}
c:  {:x 3, :y 2}
c:  {:x 3, :y 3}
c:  {:x 3, :y 4}
c:  {:x 3, :y 5}
c:  {:x 3, :y 6}
c:  {:x 3, :y 7}
c:  {:x 3, :y 8}
c:  {:x 3, :y 9}
c:  {:x 3, :y 10}
c:  {:x 4, :y 0}
c:  {:x 4, :y 1}
c:  {:x 4, :y 2}
c:  {:x 4, :y 3}
c:  {:x 4, :y 4}
c:  {:x 4, :y 5}
c:  {:x 4, :y 6}
c:  {:x 4, :y 7}
c:  {:x 4, :y 8}
c:  {:x 4, :y 9}
c:  {:x 4, :y 10}
c:  {:x 5, :y 0}
c:  {:x 5, :y 1}
c:  {:x 5, :y 2}
c:  {:x 5, :y 3}
c:  {:x 5, :y 4}
c:  {:x 5, :y 5}
c:  {:x 5, :y 6}
c:  {:x 5, :y 7}
c:  {:x 5, :y 8}
c:  {:x 5, :y 9}
c:  {:x 5, :y 10}
c:  {:x 6, :y 0}
c:  {:x 6, :y 1}
c:  {:x 6, :y 2}
c:  {:x 6, :y 3}
c:  {:x 6, :y 4}
c:  {:x 6, :y 5}
c:  {:x 6, :y 6}
c:  {:x 6, :y 7}
c:  {:x 6, :y 8}
c:  {:x 6, :y 9}
c:  {:x 6, :y 10}
c:  {:x 7, :y 0}
c:  {:x 7, :y 1}
c:  {:x 7, :y 2}
c:  {:x 7, :y 3}
c:  {:x 7, :y 4}
c:  {:x 7, :y 5}
c:  {:x 7, :y 6}
c:  {:x 7, :y 7}
c:  {:x 7, :y 8}
c:  {:x 7, :y 9}
c:  {:x 7, :y 10}
c:  {:x 8, :y 0}
c:  {:x 8, :y 1}
c:  {:x 8, :y 2}
c:  {:x 8, :y 3}
c:  {:x 8, :y 4}
c:  {:x 8, :y 5}
c:  {:x 8, :y 6}
c:  {:x 8, :y 7}
c:  {:x 8, :y 8}
c:  {:x 8, :y 9}
c:  {:x 8, :y 10}
c:  {:x 9, :y 0}
c:  {:x 9, :y 1}
c:  {:x 9, :y 2}
c:  {:x 9, :y 3}
c:  {:x 9, :y 4}
c:  {:x 9, :y 5}
c:  {:x 9, :y 6}
c:  {:x 9, :y 7}
c:  {:x 9, :y 8}
c:  {:x 9, :y 9}
c:  {:x 9, :y 10}
c:  {:x 10, :y 0}
c:  {:x 10, :y 1}
c:  {:x 10, :y 2}
c:  {:x 10, :y 3}
c:  {:x 10, :y 4}
c:  {:x 10, :y 5}
c:  {:x 10, :y 6}
c:  {:x 10, :y 7}
c:  {:x 10, :y 8}
c:  {:x 10, :y 9}
c:  {:x 10, :y 10}
{"6 5" #{"7 5" "6 6"},
 "2 10" #{"3 10" "1 10" "2 9"},
 "7 5" #{"6 5" "7 6" "8 5" "7 4"},
 "7 9" #{"7 10" "8 9" "6 9" "7 8"},
 "6 0" #{"5 0" "7 0" "6 10" "6 1"},
 "5 0" #{"6 0" "5 1" "4 0" "5 10"},
 "1 2" #{"2 2" "0 2" "1 3"},
 "8 7" #{"7 7" "8 8" "9 7" "8 6"},
 "3 1" #{"4 1" "3 0" "3 2"},
 "5 6" #{"4 6" "6 6" "5 7"},
 "8 10" #{"7 10" "9 10" "8 9" "8 0"},
 "3 8" #{"3 9" "2 8" "4 8" "3 7"},
 "7 10" #{"7 9" "8 10" "7 0" "6 10"},
 "3 3" #{"4 3" "3 4" "3 2" "2 3"},
 "5 2" #{"5 1" "4 2"},
 "0 3" #{"10 3" "0 2" "0 4" "1 3"},
 "1 0" #{"1 10" "0 0"},
 "7 2" #{"7 1" "8 2" "7 3"},
 "5 8" #{"5 9" "6 8" "5 7" "4 8"},
 "7 1" #{"7 2" "7 0" "6 1" "8 1"},
 "9 10" #{"8 10" "9 0" "10 10" "9 9"},
 "4 3" #{"3 3" "4 2"},
 "7 6" #{"7 5" "7 7" "6 6" "8 6"},
 "10 8" #{"10 7" "9 8" "10 9" "0 8"},
 "2 2" #{"1 2" "3 2" "2 3"},
 "3 10" #{"2 10" "3 9" "4 10" "3 0"},
 "3 5" #{"2 5" "3 4" "3 6" "4 5"},
 "9 3" #{"8 3" "10 3" "9 2" "9 4"},
 "7 0" #{"6 0" "7 10" "7 1" "8 0"},
 "7 7" #{"8 7" "7 6" "7 8" "6 7"},
 "8 9" #{"7 9" "8 10" "8 8" "9 9"},
 "8 5" #{"7 5" "9 5" "8 4" "8 6"},
 "3 9" #{"3 8" "3 10" "4 9" "2 9"},
 "6 9" #{"7 9" "6 10" "5 9" "6 8"},
 "1 10" #{"2 10" "1 0" "0 10" "1 9"},
 "0 1" #{"0 2" "10 1" "0 0"},
 "2 5" #{"3 5" "2 4" "2 6" "1 5"},
 "10 7" #{"10 8" "0 7" "9 7" "10 6"},
 "2 8" #{"3 8" "1 8" "2 7" "2 9"},
 "8 2" #{"7 2" "8 3" "8 1" "9 2"},
 "4 1" #{"3 1" "5 1" "4 0" "4 2"},
 "10 5" #{"10 4" "9 5" "10 6" "0 5"},
 "6 10" #{"6 0" "7 10" "6 9" "5 10"},
 "6 1" #{"6 0" "7 1" "5 1"},
 "8 3" #{"9 3" "8 2" "7 3" "8 4"},
 "0 7" #{"10 7" "1 7" "0 8" "0 6"},
 "7 4" #{"7 5" "7 3" "8 4"},
 "5 1" #{"5 0" "5 2" "4 1" "6 1"},
 "10 3" #{"0 3" "9 3" "10 4" "10 2"},
 "1 7" #{"0 7" "1 6" "1 8" "2 7"},
 ...}
clj꞉hench.path꞉> 
(count (keys (board->graph sample)))
c:  {:x 0, :y 0}
c:  {:x 0, :y 1}
c:  {:x 0, :y 2}
c:  {:x 0, :y 3}
c:  {:x 0, :y 4}
c:  {:x 0, :y 5}
c:  {:x 0, :y 6}
c:  {:x 0, :y 7}
c:  {:x 0, :y 8}
c:  {:x 0, :y 9}
c:  {:x 0, :y 10}
c:  {:x 1, :y 0}
c:  {:x 1, :y 1}
c:  {:x 1, :y 2}
c:  {:x 1, :y 3}
c:  {:x 1, :y 4}
c:  {:x 1, :y 5}
c:  {:x 1, :y 6}
c:  {:x 1, :y 7}
c:  {:x 1, :y 8}
c:  {:x 1, :y 9}
c:  {:x 1, :y 10}
c:  {:x 2, :y 0}
c:  {:x 2, :y 1}
c:  {:x 2, :y 2}
c:  {:x 2, :y 3}
c:  {:x 2, :y 4}
c:  {:x 2, :y 5}
c:  {:x 2, :y 6}
c:  {:x 2, :y 7}
c:  {:x 2, :y 8}
c:  {:x 2, :y 9}
c:  {:x 2, :y 10}
c:  {:x 3, :y 0}
c:  {:x 3, :y 1}
c:  {:x 3, :y 2}
c:  {:x 3, :y 3}
c:  {:x 3, :y 4}
c:  {:x 3, :y 5}
c:  {:x 3, :y 6}
c:  {:x 3, :y 7}
c:  {:x 3, :y 8}
c:  {:x 3, :y 9}
c:  {:x 3, :y 10}
c:  {:x 4, :y 0}
c:  {:x 4, :y 1}
c:  {:x 4, :y 2}
c:  {:x 4, :y 3}
c:  {:x 4, :y 4}
c:  {:x 4, :y 5}
c:  {:x 4, :y 6}
c:  {:x 4, :y 7}
c:  {:x 4, :y 8}
c:  {:x 4, :y 9}
c:  {:x 4, :y 10}
c:  {:x 5, :y 0}
c:  {:x 5, :y 1}
c:  {:x 5, :y 2}
c:  {:x 5, :y 3}
c:  {:x 5, :y 4}
c:  {:x 5, :y 5}
c:  {:x 5, :y 6}
c:  {:x 5, :y 7}
c:  {:x 5, :y 8}
c:  {:x 5, :y 9}
c:  {:x 5, :y 10}
c:  {:x 6, :y 0}
c:  {:x 6, :y 1}
c:  {:x 6, :y 2}
c:  {:x 6, :y 3}
c:  {:x 6, :y 4}
c:  {:x 6, :y 5}
c:  {:x 6, :y 6}
c:  {:x 6, :y 7}
c:  {:x 6, :y 8}
c:  {:x 6, :y 9}
c:  {:x 6, :y 10}
c:  {:x 7, :y 0}
c:  {:x 7, :y 1}
c:  {:x 7, :y 2}
c:  {:x 7, :y 3}
c:  {:x 7, :y 4}
c:  {:x 7, :y 5}
c:  {:x 7, :y 6}
c:  {:x 7, :y 7}
c:  {:x 7, :y 8}
c:  {:x 7, :y 9}
c:  {:x 7, :y 10}
c:  {:x 8, :y 0}
c:  {:x 8, :y 1}
c:  {:x 8, :y 2}
c:  {:x 8, :y 3}
c:  {:x 8, :y 4}
c:  {:x 8, :y 5}
c:  {:x 8, :y 6}
c:  {:x 8, :y 7}
c:  {:x 8, :y 8}
c:  {:x 8, :y 9}
c:  {:x 8, :y 10}
c:  {:x 9, :y 0}
c:  {:x 9, :y 1}
c:  {:x 9, :y 2}
c:  {:x 9, :y 3}
c:  {:x 9, :y 4}
c:  {:x 9, :y 5}
c:  {:x 9, :y 6}
c:  {:x 9, :y 7}
c:  {:x 9, :y 8}
c:  {:x 9, :y 9}
c:  {:x 9, :y 10}
c:  {:x 10, :y 0}
c:  {:x 10, :y 1}
c:  {:x 10, :y 2}
c:  {:x 10, :y 3}
c:  {:x 10, :y 4}
c:  {:x 10, :y 5}
c:  {:x 10, :y 6}
c:  {:x 10, :y 7}
c:  {:x 10, :y 8}
c:  {:x 10, :y 9}
c:  {:x 10, :y 10}
111
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/cost
clj꞉hench.path꞉> 
(a* (board->graph sample) "0 1" "10 10" :distance cost)
(("0 1" "10 1" "10 0" "10 10")
 ("0 1" "0 0" "0 10" "10 10")
 ("0 1" "0 0" "10 0" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "10 0" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "10 1" "10 0" "9 0" "9 10" "10 10")
 ("0 1" "10 1" "10 0" "0 0" "0 10" "10 10")
 ("0 1" "0 0" "1 0" "1 10" "0 10" "10 10")
 ("0 1" "0 0" "0 10" "0 9" "10 9" "10 10")
 ("0 1" "0 0" "10 0" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "10 0" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "10 0" "0 0" "0 10" "10 10")
 ("0 1" "0 2" "10 2" "9 2" "9 1" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "10 2" "9 2" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "10 2" "9 2" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "9 10" "9 9" "10 9" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "10 0" "0 0" "0 10" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "8 0" "8 10" "9 10" "10 10")
 ("0 1" "10 1" "9 1" "8 1" "8 0" "8 10" "9 10" "10 10")
 ("0 1" "10 1" "9 1" "8 1" "8 0" "9 0" "9 10" "10 10")
 ("0 1" "10 1" "9 1" "8 1" "8 0" "9 0" "10 0" "10 10")
 ("0 1" "10 1" "10 0" "9 0" "9 10" "9 9" "10 9" "10 10")
 ("0 1" "10 1" "10 0" "9 0" "8 0" "8 10" "9 10" "10 10")
 ("0 1" "10 1" "10 0" "0 0" "1 0" "1 10" "0 10" "10 10")
 ("0 1" "10 1" "10 0" "0 0" "0 10" "0 9" "10 9" "10 10")
 ("0 1" "10 1" "10 2" "9 2" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "10 1" "10 2" "9 2" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "0 0" "1 0" "1 10" "0 10" "0 9" "10 9" "10 10")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "0 9" "10 9" "10 10")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "0 9" "0 10" "10 10")
 ("0 1" "0 0" "0 10" "1 10" "1 9" "0 9" "10 9" "10 10")
 ("0 1" "0 0" "0 10" "0 9" "10 9" "9 9" "9 10" "10 10")
 ("0 1" "0 0" "0 10" "0 9" "0 8" "10 8" "10 9" "10 10")
 ("0 1" "0 0" "10 0" "10 1" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 0" "10 0" "9 0" "9 10" "9 9" "10 9" "10 10")
 ("0 1" "0 0" "10 0" "9 0" "8 0" "8 10" "9 10" "10 10")
 ("0 1" "0 2" "1 2" "1 3" "0 3" "10 3" "10 2" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 2" "9 1" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 2" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 2" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 2" "10 2" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "10 0" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "10 0" "0 0" "0 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "9 2" "9 1" "10 1" "10 0" "10 10")
 ...)
clj꞉hench.path꞉> 
(time (a* (board->graph sample) "0 1" "10 10" :distance cost))
"Elapsed time: 2.927542 msecs"
(("0 1" "10 1" "10 0" "10 10")
 ("0 1" "0 0" "0 10" "10 10")
 ("0 1" "0 0" "10 0" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "10 0" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "10 1" "10 0" "9 0" "9 10" "10 10")
 ("0 1" "10 1" "10 0" "0 0" "0 10" "10 10")
 ("0 1" "0 0" "1 0" "1 10" "0 10" "10 10")
 ("0 1" "0 0" "0 10" "0 9" "10 9" "10 10")
 ("0 1" "0 0" "10 0" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "10 0" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "10 2" "10 1" "10 0" "0 0" "0 10" "10 10")
 ("0 1" "0 2" "10 2" "9 2" "9 1" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "10 2" "9 2" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "10 2" "9 2" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "9 10" "9 9" "10 9" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "10 0" "0 0" "0 10" "10 10")
 ("0 1" "10 1" "9 1" "9 0" "8 0" "8 10" "9 10" "10 10")
 ("0 1" "10 1" "9 1" "8 1" "8 0" "8 10" "9 10" "10 10")
 ("0 1" "10 1" "9 1" "8 1" "8 0" "9 0" "9 10" "10 10")
 ("0 1" "10 1" "9 1" "8 1" "8 0" "9 0" "10 0" "10 10")
 ("0 1" "10 1" "10 0" "9 0" "9 10" "9 9" "10 9" "10 10")
 ("0 1" "10 1" "10 0" "9 0" "8 0" "8 10" "9 10" "10 10")
 ("0 1" "10 1" "10 0" "0 0" "1 0" "1 10" "0 10" "10 10")
 ("0 1" "10 1" "10 0" "0 0" "0 10" "0 9" "10 9" "10 10")
 ("0 1" "10 1" "10 2" "9 2" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "10 1" "10 2" "9 2" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "0 0" "1 0" "1 10" "0 10" "0 9" "10 9" "10 10")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "0 9" "10 9" "10 10")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "0 9" "0 10" "10 10")
 ("0 1" "0 0" "0 10" "1 10" "1 9" "0 9" "10 9" "10 10")
 ("0 1" "0 0" "0 10" "0 9" "10 9" "9 9" "9 10" "10 10")
 ("0 1" "0 0" "0 10" "0 9" "0 8" "10 8" "10 9" "10 10")
 ("0 1" "0 0" "10 0" "10 1" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 0" "10 0" "9 0" "9 10" "9 9" "10 9" "10 10")
 ("0 1" "0 0" "10 0" "9 0" "8 0" "8 10" "9 10" "10 10")
 ("0 1" "0 2" "1 2" "1 3" "0 3" "10 3" "10 2" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 2" "9 1" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 2" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 2" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 2" "10 2" "10 1" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "9 1" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "9 1" "9 0" "10 0" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "10 0" "9 0" "9 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "10 1" "10 0" "0 0" "0 10" "10 10")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "9 2" "9 1" "10 1" "10 0" "10 10")
 ...)
clj꞉hench.path꞉> 
(time (a* (board->graph sample) "0 1" "5 5" :distance cost))
"Elapsed time: 3.647458 msecs"
; nREPL Connection was closed
; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.27.4"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: path.clj
; Syntax error compiling at (src/hench/path.clj:72:43).
; Unable to resolve symbol: add in this context
; Evaluation of file path.clj failed: class clojure.lang.Compiler$CompilerException
clojure.lang.Compiler/analyze (Compiler.java:6812)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3824)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$VectorExpr/parse (Compiler.java:3264)
clojure.lang.Compiler/analyze (Compiler.java:6795)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$BodyExpr$Parser/parse (Compiler.java:6124)
clojure.lang.Compiler$FnMethod/parse (Compiler.java:5471)
clojure.lang.Compiler$FnExpr/parse (Compiler.java:4033)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7109)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7099)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/access$300 (Compiler.java:38)
clojure.lang.Compiler$DefExpr$Parser/parse (Compiler.java:596)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7111)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/eval (Compiler.java:7185)
clojure.lang.Compiler/load (Compiler.java:7640)
hench.path/eval5813 (NO_SOURCE_FILE:1)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉hench.path꞉> 
nil
clj꞉hench.path꞉> 
; Evaluating file: path.clj
; Syntax error compiling at (src/hench/path.clj:72:43).
; Unable to resolve symbol: add in this context
; Evaluation of file path.clj failed: class clojure.lang.Compiler$CompilerException
clojure.lang.Compiler/analyze (Compiler.java:6812)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3824)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$VectorExpr/parse (Compiler.java:3264)
clojure.lang.Compiler/analyze (Compiler.java:6795)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$BodyExpr$Parser/parse (Compiler.java:6124)
clojure.lang.Compiler$FnMethod/parse (Compiler.java:5471)
clojure.lang.Compiler$FnExpr/parse (Compiler.java:4033)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7109)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7099)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/access$300 (Compiler.java:38)
clojure.lang.Compiler$DefExpr$Parser/parse (Compiler.java:596)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7111)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/eval (Compiler.java:7185)
clojure.lang.Compiler/load (Compiler.java:7640)
hench.path/eval5907 (NO_SOURCE_FILE:1)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉hench.path꞉> 
; Evaluating file: utils.clj
#'hench.utils/touched-walls
clj꞉hench.utils꞉> 
; Evaluating file: path.clj
#'hench.path/cost
clj꞉hench.path꞉> 
(time (a* (board->graph sample) "0 1" "5 5" :distance cost))
; Syntax error compiling at (.calva/output-window/output.calva-repl:1512:11).
; Unable to resolve symbol: sample in this context
clj꞉hench.path꞉> (def sample {:game {:id "game-00fe20da-94ad-11ea-bb37"
                                     :ruleset {:name "standard"
                                               :version "v.1.2.3"}
                                     :timeout 500}
                              :turn 14
                              :board {:height 11
                                      :width 11
                                      :food [{:x 0, :y 2}
                                             {:x 2, :y 0}
                                             {:x 5, :y 5}
                                             {:x 9, :y 0}
                                             {:x 2, :y 6}]
                                      :hazards [{:x 0, :y 3}
                                                {:x 0, :y 1}
                                                {:x 3, :y 2}]
                                      :snakes [{:id "snake-508e96ac-94ad-11ea-bb37"
                                                :name "My Snake"
                                                :health 54
                                                :body [{:x 0, :y 1}
                                                       {:x 1, :y 1}
                                                       {:x 2, :y 1}
                                                       {:x 2, :y 0}
                                                       {:x 3, :y 0}]
                                                :latency "111"
                                                :head {:x 0, :y 1}
                                                :length 5
                                                :shout "why are we shouting??"
                                                :squad ""}
                                               {:id "snake-b67f4906-94ae-11ea-bb37"
                                                :name "Another Snake"
                                                :health 56
                                                :body [{:x 5, :y 4}
                                                       {:x 5, :y 3}
                                                       {:x 6, :y 3}
                                                       {:x 6, :y 2}]
                                                :latency "222"
                                                :head {:x 5, :y 4}
                                                :length 4
                                                :shout "I'm not really sure..."
                                                :squad ""}]}
                              :you {:id "snake-508e96ac-94ad-11ea-bb37"
                                    :name "My Snake"
                                    :health 54
                                    :body [{:x 0, :y 1}
                                           {:x 1, :y 1}
                                           {:x 2, :y 1}
                                           {:x 2, :y 0}
                                           {:x 3, :y 0}]
                                    :latency "111"
                                    :head {:x 0, :y 1}
                                    :length 5
                                    :shout "why are we shouting??"
                                    :squad ""}})
#'hench.space/sample
clj꞉hench.space꞉> 
; Evaluating file: path.clj
#'hench.path/cost
clj꞉hench.path꞉> (def sample {:game {:id "game-00fe20da-94ad-11ea-bb37"
                                     :ruleset {:name "standard"
                                               :version "v.1.2.3"}
                                     :timeout 500}
                              :turn 14
                              :board {:height 11
                                      :width 11
                                      :food [{:x 0, :y 2}
                                             {:x 2, :y 0}
                                             {:x 5, :y 5}
                                             {:x 9, :y 0}
                                             {:x 2, :y 6}]
                                      :hazards [{:x 0, :y 3}
                                                {:x 0, :y 1}
                                                {:x 3, :y 2}]
                                      :snakes [{:id "snake-508e96ac-94ad-11ea-bb37"
                                                :name "My Snake"
                                                :health 54
                                                :body [{:x 0, :y 1}
                                                       {:x 1, :y 1}
                                                       {:x 2, :y 1}
                                                       {:x 2, :y 0}
                                                       {:x 3, :y 0}]
                                                :latency "111"
                                                :head {:x 0, :y 1}
                                                :length 5
                                                :shout "why are we shouting??"
                                                :squad ""}
                                               {:id "snake-b67f4906-94ae-11ea-bb37"
                                                :name "Another Snake"
                                                :health 56
                                                :body [{:x 5, :y 4}
                                                       {:x 5, :y 3}
                                                       {:x 6, :y 3}
                                                       {:x 6, :y 2}]
                                                :latency "222"
                                                :head {:x 5, :y 4}
                                                :length 4
                                                :shout "I'm not really sure..."
                                                :squad ""}]}
                              :you {:id "snake-508e96ac-94ad-11ea-bb37"
                                    :name "My Snake"
                                    :health 54
                                    :body [{:x 0, :y 1}
                                           {:x 1, :y 1}
                                           {:x 2, :y 1}
                                           {:x 2, :y 0}
                                           {:x 3, :y 0}]
                                    :latency "111"
                                    :head {:x 0, :y 1}
                                    :length 5
                                    :shout "why are we shouting??"
                                    :squad ""}})
#'hench.path/sample
clj꞉hench.path꞉> 
(time (a* (board->graph sample) "0 1" "5 5" :distance cost))
"Elapsed time: 10.751167 msecs"
(("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "4 2" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "3 3" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "3 3" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "3 3" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "3 3" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "1 4" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "1 4" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "7 3" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "7 3" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "8 4" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "8 4" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 4" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 4" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 4" "8 4" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 4" "8 4" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ...)
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "5 5" :distance cost)))
"Elapsed time: 2068.975708 msecs"
("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "4 3" "4 4" "4 5" "5 5")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "5 5" :distance cost)))
"Elapsed time: 2017.130958 msecs"
("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "4 3" "4 4" "4 5" "5 5")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "5 5" :distance cost :heuristic heuristic)))
"Elapsed time: 2024.223834 msecs"
("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "4 3" "4 4" "4 5" "5 5")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "5 5" :distance cost :heuristic heuristic)))
"Elapsed time: 1988.862458 msecs"
("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "4 3" "4 4" "4 5" "5 5")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "5 5" :distance cost :heuristic heuristic)))
"Elapsed time: 2010.534166 msecs"
("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "4 3" "4 4" "4 5" "5 5")
clj꞉hench.path꞉> 
(time (a* (board->graph sample) "0 1" "5 5" :distance cost :heuristic heuristic))
"Elapsed time: 2.082166 msecs"
(("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "4 2" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "3 3" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "3 3" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "2 3" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "3 3" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "3 3" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "2 3" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "1 4" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "1 3" "1 4" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "7 3" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "7 3" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "8 4" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "8 4" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 4" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 4" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 4" "8 4" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 4" "8 4" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ...)
clj꞉hench.path꞉> 
(time (a* (board->graph sample) "0 1" "1 3" :distance cost :heuristic heuristic))
"Elapsed time: 1.951083 msecs"
(("0 1" "0 2" "1 2" "1 3")
 ("0 1" "0 2" "0 3" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "1 3")
 ("0 1" "0 2" "10 2" "10 3" "0 3" "1 3")
 ("0 1" "10 1" "10 2" "10 3" "0 3" "1 3")
 ("0 1" "10 1" "10 2" "0 2" "1 2" "1 3")
 ("0 1" "10 1" "10 2" "0 2" "0 3" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "2 3" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "2 4" "1 4" "1 3")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "0 4" "1 4" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "2 3" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "1 5" "1 4" "1 3")
 ("0 1" "0 2" "10 2" "10 3" "0 3" "0 4" "1 4" "1 3")
 ("0 1" "0 2" "10 2" "10 3" "10 4" "0 4" "0 3" "1 3")
 ("0 1" "0 2" "10 2" "10 3" "10 4" "0 4" "1 4" "1 3")
 ("0 1" "0 2" "10 2" "9 2" "9 3" "10 3" "0 3" "1 3")
 ("0 1" "10 1" "9 1" "9 2" "9 3" "10 3" "0 3" "1 3")
 ("0 1" "10 1" "9 1" "9 2" "10 2" "10 3" "0 3" "1 3")
 ("0 1" "10 1" "9 1" "9 2" "10 2" "0 2" "1 2" "1 3")
 ("0 1" "10 1" "9 1" "9 2" "10 2" "0 2" "0 3" "1 3")
 ("0 1" "10 1" "10 2" "10 3" "0 3" "0 2" "1 2" "1 3")
 ("0 1" "10 1" "10 2" "10 3" "0 3" "0 4" "1 4" "1 3")
 ("0 1" "10 1" "10 2" "10 3" "10 4" "0 4" "0 3" "1 3")
 ("0 1" "10 1" "10 2" "10 3" "10 4" "0 4" "1 4" "1 3")
 ("0 1" "10 1" "10 2" "0 2" "1 2" "2 2" "2 3" "1 3")
 ("0 1" "10 1" "10 2" "0 2" "0 3" "0 4" "1 4" "1 3")
 ("0 1" "10 1" "10 2" "9 2" "9 3" "10 3" "0 3" "1 3")
 ("0 1" "0 0" "10 0" "10 1" "10 2" "10 3" "0 3" "1 3")
 ("0 1" "0 0" "10 0" "10 1" "10 2" "0 2" "1 2" "1 3")
 ("0 1" "0 0" "10 0" "10 1" "10 2" "0 2" "0 3" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "3 4" "2 4" "2 3" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "3 4" "2 4" "1 4" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "3 3" "2 3" "2 4" "1 4" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "3 2" "4 2" "4 3" "3 3" "2 3" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "3 4" "2 4" "1 4" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "2 4" "2 5" "1 5" "1 4" "1 3")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "2 4" "1 4" "0 4" "0 3" "1 3")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "9 4" "10 4" "0 4" "1 4" "1 3")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "10 5" "0 5" "0 4" "1 4" "1 3")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "10 5" "0 5" "1 5" "1 4" "1 3")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "0 4" "1 4" "2 4" "2 3" "1 3")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "0 4" "0 5" "1 5" "1 4" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "0 5" "1 5" "1 4" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "3 4" "3 3" "2 3" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "2 3" "2 2" "1 2" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "1 5" "2 5" "2 4" "2 3" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "1 5" "2 5" "2 4" "2 3" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "1 5" "2 5" "2 4" "1 4" "1 3")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "1 5" "1 4" "2 4" "2 3" "1 3")
 ...)
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "1 3" :distance cost :heuristic heuristic)))
"Elapsed time: 2.20425 msecs"
("0 1" "0 2" "1 2" "1 3")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "10 3" :distance cost :heuristic heuristic)))
"Elapsed time: 2.168291 msecs"
("0 1" "0 2" "0 3" "10 3")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "4 7" :distance cost :heuristic heuristic)))
"Elapsed time: 9033.531458 msecs"
("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 9" "3 8" "4 8" "4 7")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "4 7" :distance cost :heuristic heuristic)))
"Elapsed time: 8988.859334 msecs"
("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 9" "3 8" "4 8" "4 7")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "4 7" :distance cost :heuristic #(d %1 %2 11 11))))
; Execution error (NullPointerException) at hench.utils/d (utils.clj:190).
; null
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "4 7" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 61.093708 msecs"
("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 9" "3 8" "3 7" "4 7")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "4 7" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 67.360125 msecs"
("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 9" "3 8" "3 7" "4 7")
clj꞉hench.path꞉> 
(time (first (a* (board->graph sample) "0 1" "5 5" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 39.858417 msecs"
("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
clj꞉hench.path꞉> 
(time (take 10 (a* (board->graph sample) "0 1" "5 5" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 1.941708 msecs"
(("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "4 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "10 2" "10 3" "9 3" "8 3" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "3 2" "4 2" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "3 5" "3 6" "4 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "8 5" "7 5" "6 5" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "7 6" "6 6" "6 5" "5 5"))
clj꞉hench.path꞉> 
(time (take 10 (a* (board->graph sample) "0 1" "6 6" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 1.776958 msecs"
(("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "8 4" "8 5" "7 5" "7 6" "6 6")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "8 4" "8 5" "7 5" "6 5" "6 6")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "0 6" "1 6" "2 6" "3 6" "4 6" "5 6" "6 6")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "1 5" "2 5" "3 5" "3 6" "4 6" "5 6" "6 6")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "7 3" "7 4" "8 4" "8 5" "7 5" "7 6" "6 6")
 ("0 1" "0 2" "0 3" "10 3" "9 3" "8 3" "7 3" "7 4" "8 4" "8 5" "7 5" "6 5" "6 6")
 ("0 1" "0 0" "0 10" "10 10" "9 10" "8 10" "8 9" "8 8" "8 7" "8 6" "7 6" "6 6")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "1 5" "2 5" "3 5" "3 6" "4 6" "5 6" "5 5" "6 5" "6 6")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "0 6" "1 6" "2 6" "3 6" "4 6" "4 7" "5 7" "5 6" "6 6")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "0 6" "1 6" "2 6" "3 6" "4 6" "4 7" "5 7" "6 7" "6 6"))
clj꞉hench.path꞉> 
(time (take 10 (a* (board->graph sample) "0 1" "4 9" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 1.870875 msecs"
(("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "4 10" "4 9")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 9" "4 9")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 9" "3 8" "4 8" "4 9")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 0" "4 0" "4 10" "4 9")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "2 8" "3 8" "3 9" "4 9")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "2 8" "3 8" "3 9" "3 10" "4 10" "4 9")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 9" "3 8" "3 7" "4 7" "4 8" "4 9")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 0" "4 0" "5 0" "5 10" "4 10" "4 9")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "3 0" "4 0" "5 0" "5 10" "5 9" "4 9")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "2 8" "2 7" "3 7" "4 7" "4 8" "4 9"))
clj꞉hench.path꞉> 
(time (take 10 (a* (board->graph sample) "0 1" "6 5" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 1.63875 msecs"
(("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5" "6 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "3 4" "4 4" "4 5" "5 5" "6 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5" "5 6" "6 6" "6 5")
 ("0 1" "0 2" "0 3" "0 4" "0 5" "0 6" "10 6" "9 6" "8 6" "7 6" "7 5" "6 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "2 5" "3 5" "4 5" "4 6" "5 6" "5 5" "6 5")
 ("0 1" "0 2" "0 3" "10 3" "10 2" "9 2" "8 2" "7 2" "7 3" "7 4" "6 4" "6 5")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "6 5")
 ("0 1" "0 2" "10 2" "10 1" "9 1" "8 1" "7 1" "7 2" "7 3" "7 4" "6 4" "6 5")
 ("0 1" "0 2" "0 3" "0 4" "1 4" "2 4" "2 5" "2 6" "3 6" "4 6" "4 5" "5 5" "6 5")
 ("0 1" "10 1" "10 0" "9 0" "9 1" "8 1" "8 2" "8 3" "8 4" "8 5" "7 5" "6 5"))
clj꞉hench.path꞉> 
(time (take 100 (a* (board->graph sample) "0 1" "2 7" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 1.680333 msecs"
(("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "2 8" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "1 7" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "1 7" "1 6" "2 6" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "3 9" "3 8" "2 8" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "3 9" "3 8" "3 7" "2 7")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "1 5" "1 6" "1 7" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "1 7" "1 6" "2 6" "3 6" "3 7" "2 7")
 ("0 1" "0 0" "0 10" "0 9" "10 9" "10 8" "10 7" "0 7" "1 7" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "1 7" "1 6" "1 5" "2 5" "2 6" "2 7")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "1 5" "1 6" "1 7" "1 8" "2 8" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "3 9" "3 8" "4 8" "4 7" "3 7" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "0 8" "0 7" "0 6" "1 6" "2 6" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "1 7" "1 6" "2 6" "3 6" "3 7" "3 8" "2 8" "2 7")
 ("0 1" "0 0" "10 0" "10 10" "10 9" "0 9" "1 9" "1 8" "2 8" "2 7")
 ("0 1" "0 0" "10 0" "10 10" "10 9" "0 9" "1 9" "2 9" "2 8" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "3 9" "4 9" "4 8" "4 7" "3 7" "2 7")
 ("0 1" "10 1" "10 0" "0 0" "1 0" "1 10" "2 10" "2 9" "2 8" "2 7")
 ("0 1" "0 0" "0 10" "0 9" "10 9" "10 8" "10 7" "0 7" "0 8" "1 8" "1 7" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "1 7" "1 6" "1 5" "2 5" "3 5" "3 6" "2 6" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "1 7" "1 6" "1 5" "2 5" "3 5" "3 6" "3 7" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "4 10" "4 9" "3 9" "3 8" "2 8" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "3 10" "4 10" "4 9" "3 9" "3 8" "3 7" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "3 9" "3 8" "4 8" "4 7" "4 6" "3 6" "3 7" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "3 9" "3 8" "4 8" "4 7" "4 6" "3 6" "2 6" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "1 7" "1 6" "2 6" "3 6" "3 7" "3 8" "3 9" "2 9" "2 8" "2 7")
 ("0 1" "0 0" "10 0" "10 10" "10 9" "0 9" "1 9" "2 9" "3 9" "3 8" "2 8" "2 7")
 ("0 1" "0 0" "10 0" "10 10" "10 9" "0 9" "1 9" "2 9" "3 9" "3 8" "3 7" "2 7")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "10 5" "0 5" "1 5" "1 6" "1 7" "2 7")
 ("0 1" "10 1" "10 0" "0 0" "1 0" "1 10" "2 10" "2 9" "1 9" "1 8" "2 8" "2 7")
 ("0 1" "10 1" "10 0" "0 0" "1 0" "1 10" "2 10" "2 9" "1 9" "1 8" "1 7" "2 7")
 ("0 1" "0 2" "10 2" "10 3" "10 4" "10 5" "10 6" "10 7" "0 7" "1 7" "2 7")
 ("0 1" "10 1" "10 0" "0 0" "1 0" "1 10" "2 10" "3 10" "3 9" "3 8" "2 8" "2 7")
 ("0 1" "10 1" "10 2" "0 2" "1 2" "1 3" "1 4" "1 5" "1 6" "2 6" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "3 9" "3 10" "4 10" "4 9" "4 8" "3 8" "2 8" "2 7")
 ("0 1" "0 0" "1 0" "1 10" "2 10" "2 9" "3 9" "3 10" "4 10" "4 9" "4 8" "3 8" "3 7" "2 7")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "10 5" "0 5" "1 5" "1 6" "1 7" "1 8" "2 8" "2 7")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "1 5" "1 6" "1 7" "1 8" "1 9" "1 10" "2 10" "2 9" "2 8" "2 7")
 ("0 1" "10 1" "10 0" "0 0" "1 0" "1 10" "2 10" "2 9" "1 9" "1 8" "2 8" "3 8" "3 7" "2 7")
 ("0 1" "10 1" "10 0" "0 0" "0 10" "10 10" "10 9" "0 9" "1 9" "1 8" "2 8" "2 7")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "0 4" "0 5" "10 5" "10 6" "0 6" "0 7" "1 7" "2 7")
 ("0 1" "0 0" "10 0" "10 10" "10 9" "0 9" "1 9" "1 10" "2 10" "2 9" "3 9" "3 8" "2 8" "2 7")
 ("0 1" "0 0" "10 0" "10 10" "10 9" "0 9" "1 9" "1 10" "2 10" "2 9" "3 9" "3 8" "3 7" "2 7")
 ("0 1" "0 0" "10 0" "9 0" "9 10" "10 10" "10 9" "10 8" "10 7" "0 7" "1 7" "2 7")
 ("0 1" "0 0" "10 0" "10 10" "10 9" "0 9" "1 9" "1 10" "2 10" "3 10" "3 9" "3 8" "2 8" "2 7")
 ("0 1" "10 1" "10 0" "0 0" "1 0" "1 10" "2 10" "2 9" "1 9" "0 9" "0 8" "0 7" "1 7" "2 7")
 ("0 1" "0 2" "10 2" "10 1" "10 0" "0 0" "0 10" "1 10" "1 9" "1 8" "2 8" "2 7")
 ("0 1" "0 2" "10 2" "10 1" "10 0" "0 0" "0 10" "1 10" "1 9" "1 8" "1 7" "2 7")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "10 5" "0 5" "1 5" "1 6" "1 7" "1 8" "1 9" "2 9" "2 8" "2 7")
 ("0 1" "0 0" "0 10" "0 9" "10 9" "10 8" "9 8" "8 8" "8 7" "9 7" "10 7" "0 7" "1 7" "2 7")
 ("0 1" "10 1" "9 1" "9 0" "10 0" "0 0" "0 10" "1 10" "1 9" "1 8" "2 8" "2 7")
 ...)
clj꞉hench.path꞉> 
(time (take 100 (a* (board->graph sample) "3 5" "2 7" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 1.859833 msecs"
(("3 5" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 7" "2 7")
 ("3 5" "3 6" "4 6" "4 7" "3 7" "2 7")
 ("3 5" "3 4" "2 4" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "3 7" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "1 7" "2 7")
 ("3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "3 7" "3 8" "2 8" "2 7")
 ("3 5" "3 4" "2 4" "1 4" "1 5" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "1 7" "1 8" "2 8" "2 7")
 ("3 5" "3 4" "3 3" "2 3" "2 4" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "0 8" "1 8" "2 8" "2 7")
 ("3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "3 7" "3 8" "2 8" "1 8" "1 7" "2 7")
 ("3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "3 7" "3 8" "3 9" "2 9" "2 8" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "1 7" "1 8" "2 8" "3 8" "3 7" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "0 8" "1 8" "2 8" "3 8" "3 7" "2 7")
 ("3 5" "2 5" "2 4" "3 4" "4 4" "4 5" "4 6" "3 6" "2 6" "2 7")
 ("3 5" "4 5" "4 6" "5 6" "5 7" "5 8" "4 8" "3 8" "3 7" "2 7")
 ("3 5" "3 4" "2 4" "2 3" "1 3" "1 4" "1 5" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "1 7" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "0 8" "0 9" "1 9" "2 9" "2 8" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "5 6" "4 6" "3 6" "2 6" "2 7")
 ("3 5" "2 5" "2 4" "3 4" "4 4" "4 5" "4 6" "4 7" "4 8" "3 8" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "1 4" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "1 7" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "1 7" "1 8" "2 8" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "0 8" "1 8" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "5 6" "4 6" "4 7" "4 8" "3 8" "2 8" "2 7")
 ("3 5" "4 5" "4 6" "5 6" "5 7" "5 8" "5 9" "4 9" "4 8" "4 7" "3 7" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 5" "0 5" "0 6" "10 6" "10 7" "10 8" "0 8" "0 7" "1 7" "2 7")
 ("3 5" "2 5" "2 4" "1 4" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "0 8" "1 8" "2 8" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "1 7" "1 8" "1 9" "1 10" "2 10" "2 9" "3 9" "3 8" "2 8" "2 7")
 ("3 5" "3 4" "2 4" "2 3" "3 3" "4 3" "4 4" "4 5" "4 6" "3 6" "3 7" "2 7")
 ("3 5" "2 5" "2 4" "1 4" "1 5" "0 5" "0 6" "10 6" "10 7" "10 8" "0 8" "0 7" "1 7" "2 7")
 ("3 5" "3 4" "3 3" "2 3" "2 2" "1 2" "1 3" "1 4" "1 5" "1 6" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "5 6" "4 6" "4 7" "4 8" "3 8" "3 9" "2 9" "2 8" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "0 8" "0 9" "1 9" "2 9" "2 10" "3 10" "3 9" "3 8" "2 8" "2 7")
 ("3 5" "3 4" "3 3" "3 2" "2 2" "1 2" "1 3" "1 4" "1 5" "1 6" "2 6" "2 7")
 ("3 5" "2 5" "2 4" "2 3" "3 3" "3 2" "3 1" "3 0" "3 10" "3 9" "3 8" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "2 3" "3 3" "3 2" "3 1" "3 0" "3 10" "2 10" "2 9" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "1 4" "1 5" "0 5" "0 6" "10 6" "10 7" "10 8" "0 8" "0 7" "1 7" "1 6" "2 6" "2 7")
 ("3 5" "4 5" "5 5" "6 5" "7 5" "7 6" "7 7" "6 7" "5 7" "4 7" "3 7" "2 7")
 ("3 5" "4 5" "4 6" "5 6" "6 6" "7 6" "8 6" "9 6" "10 6" "10 7" "0 7" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "5 6" "4 6" "4 7" "4 8" "3 8" "3 9" "2 9" "2 8" "1 8" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "6 5" "6 6" "5 6" "5 7" "4 7" "4 8" "3 8" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "2 3" "3 3" "3 2" "3 1" "3 0" "3 10" "3 9" "3 8" "2 8" "1 8" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 3" "3 3" "3 2" "3 1" "3 0" "3 10" "3 9" "3 8" "2 8" "2 7")
 ("3 5" "3 4" "4 4" "4 3" "3 3" "3 2" "3 1" "3 0" "3 10" "2 10" "2 9" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "2 3" "3 3" "3 2" "3 1" "3 0" "3 10" "3 9" "3 8" "4 8" "4 7" "3 7" "2 7")
 ("3 5" "4 5" "4 6" "5 6" "6 6" "7 6" "8 6" "9 6" "10 6" "10 7" "0 7" "1 7" "1 6" "2 6" "2 7")
 ("3 5" "4 5" "5 5" "6 5" "7 5" "7 6" "7 7" "6 7" "5 7" "4 7" "4 6" "3 6" "2 6" "2 7")
 ("3 5" "3 4" "3 3" "4 3" "4 2" "4 1" "4 0" "4 10" "3 10" "3 9" "3 8" "2 8" "2 7")
 ...)
clj꞉hench.path꞉> 
(time (take 100 (a* (board->graph sample) "3 5" "2 7" :heuristic #(d (n->c %1) (n->c %2) 11 11))))
"Elapsed time: 1.752166 msecs"
(("3 5" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 7" "2 7")
 ("3 5" "3 6" "4 6" "4 7" "3 7" "2 7")
 ("3 5" "3 4" "2 4" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "3 7" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "1 7" "2 7")
 ("3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "3 7" "3 8" "2 8" "2 7")
 ("3 5" "3 4" "2 4" "1 4" "1 5" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "1 7" "1 8" "2 8" "2 7")
 ("3 5" "3 4" "3 3" "2 3" "2 4" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "0 8" "1 8" "2 8" "2 7")
 ("3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "3 7" "3 8" "2 8" "1 8" "1 7" "2 7")
 ("3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "3 7" "3 8" "3 9" "2 9" "2 8" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "1 7" "1 8" "2 8" "3 8" "3 7" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "0 8" "1 8" "2 8" "3 8" "3 7" "2 7")
 ("3 5" "2 5" "2 4" "3 4" "4 4" "4 5" "4 6" "3 6" "2 6" "2 7")
 ("3 5" "4 5" "4 6" "5 6" "5 7" "5 8" "4 8" "3 8" "3 7" "2 7")
 ("3 5" "3 4" "2 4" "2 3" "1 3" "1 4" "1 5" "2 5" "2 6" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "1 7" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "0 8" "0 9" "1 9" "2 9" "2 8" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "5 6" "4 6" "3 6" "2 6" "2 7")
 ("3 5" "2 5" "2 4" "3 4" "4 4" "4 5" "4 6" "4 7" "4 8" "3 8" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "1 4" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "1 7" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "1 7" "1 8" "2 8" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "0 8" "1 8" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "5 6" "4 6" "4 7" "4 8" "3 8" "2 8" "2 7")
 ("3 5" "4 5" "4 6" "5 6" "5 7" "5 8" "5 9" "4 9" "4 8" "4 7" "3 7" "2 7")
 ("3 5" "2 5" "2 6" "1 6" "1 5" "0 5" "0 6" "10 6" "10 7" "10 8" "0 8" "0 7" "1 7" "2 7")
 ("3 5" "2 5" "2 4" "1 4" "1 5" "0 5" "0 6" "10 6" "10 7" "0 7" "0 8" "1 8" "2 8" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "1 7" "1 8" "1 9" "1 10" "2 10" "2 9" "3 9" "3 8" "2 8" "2 7")
 ("3 5" "3 4" "2 4" "2 3" "3 3" "4 3" "4 4" "4 5" "4 6" "3 6" "3 7" "2 7")
 ("3 5" "2 5" "2 4" "1 4" "1 5" "0 5" "0 6" "10 6" "10 7" "10 8" "0 8" "0 7" "1 7" "2 7")
 ("3 5" "3 4" "3 3" "2 3" "2 2" "1 2" "1 3" "1 4" "1 5" "1 6" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "5 6" "4 6" "4 7" "4 8" "3 8" "3 9" "2 9" "2 8" "2 7")
 ("3 5" "2 5" "1 5" "1 6" "0 6" "0 7" "0 8" "0 9" "1 9" "2 9" "2 10" "3 10" "3 9" "3 8" "2 8" "2 7")
 ("3 5" "3 4" "3 3" "3 2" "2 2" "1 2" "1 3" "1 4" "1 5" "1 6" "2 6" "2 7")
 ("3 5" "2 5" "2 4" "2 3" "3 3" "3 2" "3 1" "3 0" "3 10" "3 9" "3 8" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "2 3" "3 3" "3 2" "3 1" "3 0" "3 10" "2 10" "2 9" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "1 4" "1 5" "0 5" "0 6" "10 6" "10 7" "10 8" "0 8" "0 7" "1 7" "1 6" "2 6" "2 7")
 ("3 5" "4 5" "5 5" "6 5" "7 5" "7 6" "7 7" "6 7" "5 7" "4 7" "3 7" "2 7")
 ("3 5" "4 5" "4 6" "5 6" "6 6" "7 6" "8 6" "9 6" "10 6" "10 7" "0 7" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "5 6" "4 6" "4 7" "4 8" "3 8" "3 9" "2 9" "2 8" "1 8" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 5" "5 5" "6 5" "6 6" "5 6" "5 7" "4 7" "4 8" "3 8" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "2 3" "3 3" "3 2" "3 1" "3 0" "3 10" "3 9" "3 8" "2 8" "1 8" "1 7" "2 7")
 ("3 5" "3 4" "4 4" "4 3" "3 3" "3 2" "3 1" "3 0" "3 10" "3 9" "3 8" "2 8" "2 7")
 ("3 5" "3 4" "4 4" "4 3" "3 3" "3 2" "3 1" "3 0" "3 10" "2 10" "2 9" "2 8" "2 7")
 ("3 5" "2 5" "2 4" "2 3" "3 3" "3 2" "3 1" "3 0" "3 10" "3 9" "3 8" "4 8" "4 7" "3 7" "2 7")
 ("3 5" "4 5" "4 6" "5 6" "6 6" "7 6" "8 6" "9 6" "10 6" "10 7" "0 7" "1 7" "1 6" "2 6" "2 7")
 ("3 5" "4 5" "5 5" "6 5" "7 5" "7 6" "7 7" "6 7" "5 7" "4 7" "4 6" "3 6" "2 6" "2 7")
 ("3 5" "3 4" "3 3" "4 3" "4 2" "4 1" "4 0" "4 10" "3 10" "3 9" "3 8" "2 8" "2 7")
 ...)
clj꞉hench.path꞉> 
#'hench.path/uhcost
clj꞉hench.path꞉> 
(time (uhcost (first (a* (board->graph sample) "3 5" "2 7" :heuristic #(d (n->c %1) (n->c %2) 11 11)))))
; Execution error (ArityException) at hench.path/eval8548 (REPL:2057).
; Wrong number of args (1) passed to: hench.path/uhcost
clj꞉hench.path꞉> 
sample
{:game {:id "game-00fe20da-94ad-11ea-bb37", :ruleset {:name "standard", :version "v.1.2.3"}, :timeout 500},
 :turn 14,
 :board
 {:height 11,
  :width 11,
  :food [{:x 0, :y 2} {:x 2, :y 0} {:x 5, :y 5} {:x 9, :y 0} {:x 2, :y 6}],
  :hazards [{:x 0, :y 3} {:x 0, :y 1} {:x 3, :y 2}],
  :snakes
  [{:shout "why are we shouting??",
    :squad "",
    :name "My Snake",
    :head {:x 0, :y 1},
    :id "snake-508e96ac-94ad-11ea-bb37",
    :latency "111",
    :length 5,
    :health 54,
    :body [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0}]}
   {:shout "I'm not really sure...",
    :squad "",
    :name "Another Snake",
    :head {:x 5, :y 4},
    :id "snake-b67f4906-94ae-11ea-bb37",
    :latency "222",
    :length 4,
    :health 56,
    :body [{:x 5, :y 4} {:x 5, :y 3} {:x 6, :y 3} {:x 6, :y 2}]}]},
 :you
 {:shout "why are we shouting??",
  :squad "",
  :name "My Snake",
  :head {:x 0, :y 1},
  :id "snake-508e96ac-94ad-11ea-bb37",
  :latency "111",
  :length 5,
  :health 54,
  :body [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0}]}}
clj꞉hench.path꞉> 
(uhcost (-> sample :board :hazards) "1 1")
1
clj꞉hench.path꞉> 
(uhcost (-> sample :board :hazards) "0 3")
15
clj꞉hench.path꞉> 
#'hench.path/hcost
clj꞉hench.path꞉> 
(time (hcost (-> sample :board :hazards) (first (a* (board->graph sample) "3 5" "2 7" :heuristic #(d (n->c %1) (n->c %2) 11 11)))))
"Elapsed time: 4.8255 msecs"
4
clj꞉hench.path꞉> 
(time (hcost (-> sample :board :hazards) (nth (a* (board->graph sample) "3 5" "2 7" :heuristic #(d (n->c %1) (n->c %2) 11 11)) 10)))
"Elapsed time: 36.62125 msecs"
10
clj꞉hench.path꞉> 
(time (hcost (-> sample :board :hazards) (nth (a* (board->graph sample) "3 5" "2 7" :heuristic #(d (n->c %1) (n->c %2) 11 11)) 17)))
"Elapsed time: 64.438667 msecs"
10
clj꞉hench.path꞉> (map #(hcost (-> sample :board :hazards) %) (take 100 (a* (board->graph sample) "3 5" "2 7" :heuristic #(d (n->c %1) (n->c %2) 11 11))))
(4
 6
 6
 6
 8
 8
 10
 8
 10
 8
 10
 12
 12
 12
 12
 10
 10
 10
 12
 12
 10
 12
 12
 14
 14
 12
 12
 14
 14
 16
 12
 14
 12
 14
 16
 26
 27
 27
 16
 12
 13
 16
 14
 29
 27
 27
 29
 15
 14
 13
 ...)
clj꞉hench.path꞉> 
(time (map #(hcost (-> sample :board :hazards) %) (take 100 (a* (board->graph sample) "3 5" "2 7" :heuristic #(d (n->c %1) (n->c %2) 11 11)))))
"Elapsed time: 1.966292 msecs"
(4
 6
 6
 6
 8
 8
 10
 8
 10
 8
 10
 12
 12
 12
 12
 10
 10
 10
 12
 12
 10
 12
 12
 14
 14
 12
 12
 14
 14
 16
 12
 14
 12
 14
 16
 26
 27
 27
 16
 12
 13
 16
 14
 29
 27
 27
 29
 15
 14
 13
 ...)
clj꞉hench.path꞉> 
(time (map #(hcost (-> sample :board :hazards) %) (take 300 (a* (board->graph sample) "3 5" "2 7" :heuristic #(d (n->c %1) (n->c %2) 11 11)))))
"Elapsed time: 1.98375 msecs"
(4
 6
 6
 6
 8
 8
 10
 8
 10
 8
 10
 12
 12
 12
 12
 10
 10
 10
 12
 12
 10
 12
 12
 14
 14
 12
 12
 14
 14
 16
 12
 14
 12
 14
 16
 26
 27
 27
 16
 12
 13
 16
 14
 29
 27
 27
 29
 15
 14
 13
 ...)
clj꞉hench.path꞉> (:board sample)
{:height 11,
 :width 11,
 :food [{:x 0, :y 2} {:x 2, :y 0} {:x 5, :y 5} {:x 9, :y 0} {:x 2, :y 6}],
 :hazards [{:x 0, :y 3} {:x 0, :y 1} {:x 3, :y 2}],
 :snakes
 [{:shout "why are we shouting??",
   :squad "",
   :name "My Snake",
   :head {:x 0, :y 1},
   :id "snake-508e96ac-94ad-11ea-bb37",
   :latency "111",
   :length 5,
   :health 54,
   :body [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0}]}
  {:shout "I'm not really sure...",
   :squad "",
   :name "Another Snake",
   :head {:x 5, :y 4},
   :id "snake-b67f4906-94ae-11ea-bb37",
   :latency "222",
   :length 4,
   :health 56,
   :body [{:x 5, :y 4} {:x 5, :y 3} {:x 6, :y 3} {:x 6, :y 2}]}]}
clj꞉hench.path꞉> (length '(1 2 3))
; Syntax error compiling at (.calva/output-window/output.calva-repl:2302:18).
; Unable to resolve symbol: length in this context
clj꞉hench.path꞉> 
(count '(1 2 3))
3
clj꞉hench.path꞉> 
(time (take 100 (a* (board->graph sample) "3 5" "2 7" :distance cost :heuristic #(d (n->c %1) (n->c %2) 11 11))))
; Evaluating file: path.clj
#'hench.path/sfp
clj꞉hench.path꞉> (sfp (first (-> sample :board :snakes)) {:x 2 :y 7} (board->graph sample) (-> sample :board :hazards) 11 11)
; Execution error (IllegalArgumentException) at hench.path/sfp (path.clj:145).
; Don't know how to create ISeq from: clojure.core$filter$fn__5907
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/sfp
clj꞉hench.path꞉> 
(sfp (first (-> sample :board :snakes)) {:x 2 :y 7} (board->graph sample) (-> sample :board :hazards) 11 11)
("0 1" "0 0" "1 0" "1 10" "1 9" "1 8" "2 8" "2 7")
clj꞉hench.path꞉> 
#'hench.path/lsfp
clj꞉hench.path꞉> 
(lsfp (first (-> sample :board :snakes)) {:x 2 :y 7} (board->graph sample) (-> sample :board :hazards) 11 11)
8
clj꞉hench.path꞉> 
(lsfp (second (-> sample :board :snakes)) {:x 2 :y 7} (board->graph sample) (-> sample :board :hazards) 11 11)
0
clj꞉hench.path꞉> 
(sfp (second (-> sample :board :snakes)) {:x 2 :y 7} (board->graph sample) (-> sample :board :hazards) 11 11)
nil
clj꞉hench.path꞉> (second (-> sample :board :snakes))
{:shout "I'm not really sure...",
 :squad "",
 :name "Another Snake",
 :head {:x 5, :y 4},
 :id "snake-b67f4906-94ae-11ea-bb37",
 :latency "222",
 :length 4,
 :health 56,
 :body [{:x 5, :y 4} {:x 5, :y 3} {:x 6, :y 3} {:x 6, :y 2}]}
clj꞉hench.path꞉> (a* (board->graph sample) "5 4" "2 7" :heuristic #(d (n->c %1) (n->c %2) 11 11))
()
clj꞉hench.path꞉> 
(a* (board->graph sample) "5 4" "5 7" :heuristic #(d (n->c %1) (n->c %2) 11 11))
()
clj꞉hench.path꞉> 
(a* (board->graph sample) "5 4" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
()
clj꞉hench.path꞉> 
(a* (board->graph sample) "0 1" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
(("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "4 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "10 2" "10 3" "9 3" "8 3" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "3 2" "4 2" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "3 5" "3 6" "4 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "9 4" "8 4" "8 5" "7 5" "6 5" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "7 6" "6 6" "6 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "0 3" "0 4" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "0 3" "0 4" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "10 2" "10 3" "10 4" "0 4" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "10 2" "10 3" "10 4" "0 4" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "10 1" "9 1" "8 1" "8 2" "8 3" "8 4" "8 5" "7 5" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "10 2" "10 3" "0 3" "1 3" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "9 6" "8 6" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "9 6" "8 6" "7 6" "6 6" "6 5" "5 5")
 ("0 1" "10 1" "10 2" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "10 6" "9 6" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "10 5" "10 6" "9 6" "8 6" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "10 3" "10 4" "10 5" "10 6" "9 6" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 3" "9 3" "8 3" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "7 6" "7 7" "6 7" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "0 5" "1 5" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "0 5" "1 5" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "10 2" "10 3" "10 4" "0 4" "1 4" "2 4" "3 4" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "0 2" "10 2" "9 2" "9 1" "8 1" "7 1" "7 2" "7 3" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "10 6" "9 6" "9 5" "8 5" "7 5" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "10 1" "9 1" "9 2" "10 2" "10 3" "9 3" "9 4" "8 4" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "10 2" "10 1" "9 1" "8 1" "8 2" "8 3" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "10 1" "9 1" "9 0" "8 0" "8 1" "8 2" "8 3" "7 3" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "0 3" "10 3" "9 3" "9 4" "9 5" "8 5" "7 5" "7 4" "6 4" "6 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "0 3" "10 3" "10 4" "0 4" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("0 1" "10 1" "10 0" "9 0" "9 1" "8 1" "7 1" "7 2" "7 3" "7 4" "7 5" "6 5" "5 5")
 ("0 1" "0 0" "0 10" "1 10" "2 10" "2 9" "3 9" "3 8" "3 7" "4 7" "4 6" "5 6" "5 5")
 ("0 1" "0 0" "0 10" "1 10" "2 10" "2 9" "3 9" "3 8" "3 7" "4 7" "4 6" "4 5" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "10 6" "9 6" "9 7" "8 7" "7 7" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "0 3" "0 4" "10 4" "10 5" "10 6" "9 6" "9 7" "8 7" "7 7" "7 6" "7 5" "6 5" "5 5")
 ("0 1" "10 1" "9 1" "9 2" "10 2" "10 3" "9 3" "9 4" "8 4" "7 4" "7 5" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "0 3" "0 4" "0 5" "10 5" "10 4" "9 4" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "0 3" "0 4" "1 4" "2 4" "2 5" "1 5" "1 6" "2 6" "3 6" "4 6" "5 6" "5 5")
 ("0 1" "0 2" "1 2" "1 3" "0 3" "0 4" "1 4" "2 4" "2 5" "1 5" "1 6" "2 6" "3 6" "4 6" "4 5" "5 5")
 ("0 1" "10 1" "9 1" "8 1" "8 0" "8 10" "7 10" "7 9" "7 8" "7 7" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "0 2" "10 2" "10 3" "0 3" "1 3" "1 4" "0 4" "0 5" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("0 1" "10 1" "9 1" "9 0" "8 0" "7 0" "7 10" "7 9" "7 8" "7 7" "7 6" "7 5" "6 5" "5 5")
 ("0 1" "10 1" "9 1" "9 0" "8 0" "8 10" "8 9" "8 8" "8 7" "7 7" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "10 1" "9 1" "9 0" "8 0" "8 10" "8 9" "8 8" "8 7" "7 7" "7 6" "7 5" "6 5" "5 5")
 ("0 1" "10 1" "9 1" "9 0" "9 10" "8 10" "8 9" "8 8" "8 7" "7 7" "7 6" "6 6" "5 6" "5 5")
 ("0 1" "10 1" "9 1" "9 0" "9 10" "8 10" "8 9" "8 8" "8 7" "7 7" "7 6" "7 5" "6 5" "5 5")
 ...)
clj꞉hench.path꞉> 
(a* (board->graph sample) "4 4" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
(("4 4" "4 5" "5 5")
 ("4 4" "4 5" "4 6" "5 6" "5 5")
 ("4 4" "3 4" "3 5" "4 5" "5 5")
 ("4 4" "4 5" "3 5" "3 6" "4 6" "5 6" "5 5")
 ("4 4" "3 4" "3 5" "3 6" "4 6" "5 6" "5 5")
 ("4 4" "3 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "3 6" "4 6" "5 6" "5 5")
 ("4 4" "3 4" "3 5" "2 5" "2 6" "3 6" "4 6" "4 5" "5 5")
 ("4 4" "3 4" "2 4" "2 5" "2 6" "3 6" "4 6" "5 6" "5 5")
 ("4 4" "3 4" "2 4" "2 5" "2 6" "3 6" "4 6" "4 5" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "3 6" "4 6" "5 6" "6 6" "6 5" "5 5")
 ("4 4" "4 3" "3 3" "2 3" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "5 7" "5 6" "5 5")
 ("4 4" "3 4" "2 4" "2 5" "2 6" "3 6" "4 6" "5 6" "6 6" "6 5" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "2 7" "3 7" "3 6" "4 6" "5 6" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "3 6" "4 6" "5 6" "6 6" "7 6" "7 5" "6 5" "5 5")
 ("4 4" "4 3" "3 3" "2 3" "2 4" "3 4" "3 5" "3 6" "4 6" "5 6" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "5 7" "6 7" "6 6" "5 6" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "5 7" "6 7" "6 6" "6 5" "5 5")
 ("4 4" "4 3" "3 3" "3 4" "2 4" "1 4" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("4 4" "4 3" "4 2" "5 2" "6 2" "7 2" "7 3" "7 4" "6 4" "6 5" "5 5")
 ("4 4" "4 5" "3 5" "3 6" "4 6" "4 7" "4 8" "5 8" "6 8" "6 7" "6 6" "5 6" "5 5")
 ("4 4" "3 4" "2 4" "2 5" "2 6" "3 6" "4 6" "5 6" "6 6" "7 6" "7 5" "6 5" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "2 7" "3 7" "4 7" "5 7" "6 7" "6 6" "5 6" "5 5")
 ("4 4" "4 3" "3 3" "2 3" "2 4" "3 4" "3 5" "3 6" "4 6" "5 6" "6 6" "6 5" "5 5")
 ("4 4" "4 3" "3 3" "2 3" "1 3" "1 4" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("4 4" "3 4" "3 5" "3 6" "3 7" "4 7" "4 8" "5 8" "6 8" "6 7" "6 6" "5 6" "5 5")
 ("4 4" "3 4" "3 5" "3 6" "3 7" "4 7" "4 8" "5 8" "6 8" "6 7" "6 6" "6 5" "5 5")
 ("4 4" "4 3" "4 2" "5 2" "5 1" "5 0" "5 10" "5 9" "5 8" "5 7" "5 6" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "5 7" "5 8" "6 8" "6 7" "6 6" "5 6" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 6" "3 6" "4 6" "4 7" "5 7" "5 8" "6 8" "6 7" "6 6" "6 5" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "1 5" "0 5" "10 5" "9 5" "8 5" "7 5" "7 4" "6 4" "6 5" "5 5")
 ("4 4" "3 4" "2 4" "1 4" "0 4" "0 5" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("4 4" "4 3" "4 2" "5 2" "5 1" "5 0" "5 10" "5 9" "5 8" "5 7" "5 6" "4 6" "4 5" "5 5")
 ("4 4" "4 3" "4 2" "5 2" "5 1" "5 0" "5 10" "5 9" "5 8" "5 7" "5 6" "6 6" "6 5" "5 5")
 ("4 4" "3 4" "3 5" "3 6" "3 7" "4 7" "4 8" "5 8" "6 8" "6 7" "6 6" "7 6" "7 5" "6 5" "5 5")
 ("4 4" "4 3" "4 2" "5 2" "5 1" "5 0" "5 10" "5 9" "5 8" "5 7" "6 7" "6 6" "5 6" "5 5")
 ("4 4" "4 3" "4 2" "5 2" "5 1" "5 0" "5 10" "5 9" "5 8" "5 7" "6 7" "6 6" "6 5" "5 5")
 ("4 4" "3 4" "3 5" "4 5" "4 6" "3 6" "2 6" "2 7" "3 7" "3 8" "4 8" "4 7" "5 7" "5 6" "5 5")
 ("4 4" "4 3" "4 2" "5 2" "5 1" "5 0" "5 10" "5 9" "5 8" "6 8" "6 7" "6 6" "5 6" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "1 5" "0 5" "10 5" "10 4" "9 4" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("4 4" "4 3" "3 3" "2 3" "1 3" "1 4" "2 4" "3 4" "3 5" "4 5" "4 6" "4 7" "5 7" "5 6" "5 5")
 ("4 4" "3 4" "2 4" "1 4" "0 4" "0 5" "10 5" "9 5" "8 5" "7 5" "7 6" "6 6" "5 6" "5 5")
 ("4 4" "3 4" "2 4" "1 4" "0 4" "0 5" "10 5" "9 5" "8 5" "7 5" "7 6" "6 6" "6 5" "5 5")
 ("4 4" "4 5" "3 5" "2 5" "2 4" "1 4" "1 5" "1 6" "2 6" "2 7" "3 7" "3 6" "4 6" "5 6" "5 5")
 ("4 4" "3 4" "3 5" "3 6" "3 7" "4 7" "4 8" "5 8" "6 8" "6 7" "6 6" "7 6" "7 5" "7 4" "6 4" "6 5" "5 5")
 ("4 4" "4 3" "4 2" "5 2" "5 1" "5 0" "6 0" "6 10" "6 9" "6 8" "6 7" "6 6" "5 6" "5 5")
 ("4 4" "4 3" "3 3" "3 4" "2 4" "1 4" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("4 4" "4 3" "3 3" "2 3" "2 4" "1 4" "0 4" "0 5" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("4 4" "4 3" "4 2" "5 2" "5 1" "4 1" "3 1" "3 2" "3 3" "3 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ...)
clj꞉hench.path꞉> 
(a* (board->graph sample) "5 4" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
()
clj꞉hench.path꞉> (time (board->graph sample))
"Elapsed time: 1.720334 msecs"
{"6 5" #{"7 5" "6 4" "5 5" "6 6"},
 "2 10" #{"3 10" "1 10" "2 9"},
 "7 5" #{"6 5" "7 6" "8 5" "7 4"},
 "7 9" #{"7 10" "8 9" "6 9" "7 8"},
 "6 0" #{"5 0" "7 0" "6 10" "6 1"},
 "5 0" #{"6 0" "5 1" "4 0" "5 10"},
 "1 2" #{"2 2" "0 2" "1 3"},
 "8 7" #{"7 7" "8 8" "9 7" "8 6"},
 "3 1" #{"4 1" "3 0" "3 2"},
 "5 6" #{"5 5" "4 6" "6 6" "5 7"},
 "8 10" #{"7 10" "9 10" "8 9" "8 0"},
 "3 8" #{"3 9" "2 8" "4 8" "3 7"},
 "7 10" #{"7 9" "8 10" "7 0" "6 10"},
 "3 3" #{"4 3" "3 4" "3 2" "2 3"},
 "5 2" #{"5 1" "6 2" "4 2"},
 "0 3" #{"10 3" "0 2" "0 4" "1 3"},
 "1 0" #{"1 10" "0 0"},
 "7 2" #{"7 1" "8 2" "7 3" "6 2"},
 "5 8" #{"5 9" "6 8" "5 7" "4 8"},
 "7 1" #{"7 2" "7 0" "6 1" "8 1"},
 "9 10" #{"8 10" "9 0" "10 10" "9 9"},
 "6 4" #{"6 5" "7 4"},
 "4 3" #{"3 3" "4 4" "4 2"},
 "7 6" #{"7 5" "7 7" "6 6" "8 6"},
 "10 8" #{"10 7" "9 8" "10 9" "0 8"},
 "2 2" #{"1 2" "3 2" "2 3"},
 "3 10" #{"2 10" "3 9" "4 10" "3 0"},
 "3 5" #{"2 5" "3 4" "3 6" "4 5"},
 "9 3" #{"8 3" "10 3" "9 2" "9 4"},
 "7 0" #{"6 0" "7 10" "7 1" "8 0"},
 "7 7" #{"8 7" "7 6" "7 8" "6 7"},
 "8 9" #{"7 9" "8 10" "8 8" "9 9"},
 "8 5" #{"7 5" "9 5" "8 4" "8 6"},
 "5 5" #{"6 5" "5 6" "4 5"},
 "3 9" #{"3 8" "3 10" "4 9" "2 9"},
 "6 9" #{"7 9" "6 10" "5 9" "6 8"},
 "1 10" #{"2 10" "1 0" "0 10" "1 9"},
 "0 1" #{"0 2" "10 1" "0 0"},
 "2 5" #{"3 5" "2 4" "2 6" "1 5"},
 "10 7" #{"10 8" "0 7" "9 7" "10 6"},
 "2 8" #{"3 8" "1 8" "2 7" "2 9"},
 "8 2" #{"7 2" "8 3" "8 1" "9 2"},
 "4 1" #{"3 1" "5 1" "4 0" "4 2"},
 "10 5" #{"10 4" "9 5" "10 6" "0 5"},
 "6 10" #{"6 0" "7 10" "6 9" "5 10"},
 "6 1" #{"6 0" "7 1" "5 1" "6 2"},
 "8 3" #{"9 3" "8 2" "7 3" "8 4"},
 "0 7" #{"10 7" "1 7" "0 8" "0 6"},
 "7 4" #{"7 5" "6 4" "7 3" "8 4"},
 "5 1" #{"5 0" "5 2" "4 1" "6 1"},
 ...}
clj꞉hench.path꞉> 
; Evaluating file: utils.clj
#'hench.utils/in?
clj꞉hench.utils꞉> 
; Evaluating file: path.clj
#'hench.path/lsfp
clj꞉hench.path꞉> 
(a* (board->graph (second (-> sample :board :snakes)) sample) "5 4" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
; Execution error (ArityException) at hench.path/eval9910 (REPL:2519).
; Wrong number of args (2) passed to: hench.path/board->graph
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/lsfp
clj꞉hench.path꞉> 
(a* (board->graph (second (-> sample :board :snakes)) sample) "5 4" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
()
clj꞉hench.path꞉> (second (-> sample :board :snakes))
{:shout "I'm not really sure...",
 :squad "",
 :name "Another Snake",
 :head {:x 5, :y 4},
 :id "snake-b67f4906-94ae-11ea-bb37",
 :latency "222",
 :length 4,
 :health 56,
 :body [{:x 5, :y 4} {:x 5, :y 3} {:x 6, :y 3} {:x 6, :y 2}]}
clj꞉hench.path꞉> 
(a* (board->graph (second (-> sample :board :snakes)) sample) "5 4" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
()
clj꞉hench.path꞉> 
(a* (board->graph (first (-> sample :board :snakes)) sample) "5 4" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
()
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/lsfp
clj꞉hench.path꞉> 
(a* (board->graph (second (-> sample :board :snakes)) sample) "5 4" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
(("5 4" "5 5")
 ("5 4" "6 4" "6 5" "5 5")
 ("5 4" "4 4" "4 5" "5 5")
 ("5 4" "6 4" "6 5" "6 6" "5 6" "5 5")
 ("5 4" "6 4" "7 4" "7 5" "6 5" "5 5")
 ("5 4" "6 4" "6 5" "7 5" "7 6" "6 6" "5 6" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "5 6" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "8 5" "7 5" "6 5" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "4 7" "5 7" "5 6" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "8 5" "8 6" "7 6" "7 5" "6 5" "5 5")
 ("5 4" "4 4" "3 4" "2 4" "2 5" "2 6" "3 6" "4 6" "4 5" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "4 7" "5 7" "5 6" "6 6" "6 5" "5 5")
 ("5 4" "4 4" "4 3" "3 3" "2 3" "2 4" "3 4" "3 5" "4 5" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "4 7" "5 7" "6 7" "6 6" "5 6" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "4 7" "5 7" "6 7" "6 6" "6 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "8 5" "8 6" "7 6" "7 5" "6 5" "6 6" "5 6" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "4 7" "5 7" "5 6" "6 6" "7 6" "7 5" "6 5" "5 5")
 ("5 4" "6 4" "7 4" "7 5" "7 6" "7 7" "7 8" "6 8" "6 7" "6 6" "6 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "8 5" "8 6" "8 7" "7 7" "7 6" "6 6" "5 6" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "4 7" "5 7" "5 8" "6 8" "6 7" "6 6" "5 6" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "4 7" "5 7" "5 8" "6 8" "6 7" "6 6" "6 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "9 4" "9 5" "9 6" "8 6" "8 5" "7 5" "6 5" "5 5")
 ("5 4" "6 4" "7 4" "7 5" "7 6" "7 7" "7 8" "6 8" "5 8" "5 7" "6 7" "6 6" "6 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "8 5" "9 5" "10 5" "0 5" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "4 7" "5 7" "5 8" "6 8" "6 7" "6 6" "7 6" "7 5" "6 5" "5 5")
 ("5 4" "6 4" "6 5" "7 5" "7 6" "7 7" "7 8" "7 9" "6 9" "6 8" "6 7" "6 6" "5 6" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "9 4" "10 4" "10 5" "0 5" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "8 5" "9 5" "10 5" "0 5" "1 5" "2 5" "3 5" "4 5" "4 6" "5 6" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "3 7" "4 7" "4 8" "5 8" "6 8" "6 7" "6 6" "7 6" "7 5" "6 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "8 5" "8 6" "8 7" "8 8" "7 8" "7 7" "7 6" "7 5" "6 5" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "3 7" "4 7" "4 8" "5 8" "6 8" "6 7" "7 7" "7 6" "6 6" "5 6" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "3 7" "4 7" "4 8" "5 8" "6 8" "6 7" "7 7" "7 6" "7 5" "6 5" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "4 6" "4 7" "5 7" "5 8" "6 8" "6 7" "6 6" "7 6" "7 5" "7 4" "6 4" "6 5" "5 5")
 ("5 4" "6 4" "6 5" "7 5" "7 6" "7 7" "7 8" "7 9" "6 9" "6 8" "6 7" "5 7" "4 7" "4 6" "5 6" "5 5")
 ("5 4" "6 4" "6 5" "7 5" "7 6" "7 7" "7 8" "7 9" "6 9" "6 8" "6 7" "5 7" "4 7" "4 6" "4 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "9 4" "10 4" "10 5" "10 6" "9 6" "8 6" "7 6" "7 5" "6 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "8 5" "9 5" "10 5" "0 5" "1 5" "2 5" "3 5" "4 5" "4 6" "4 7" "5 7" "5 6" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "3 7" "4 7" "4 8" "5 8" "6 8" "6 7" "6 6" "7 6" "7 5" "7 4" "6 4" "6 5" "5 5")
 ("5 4" "4 4" "4 3" "3 3" "3 4" "2 4" "1 4" "0 4" "10 4" "10 5" "9 5" "8 5" "7 5" "6 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "9 4" "9 5" "9 6" "10 6" "10 5" "0 5" "1 5" "2 5" "3 5" "4 5" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "9 4" "10 4" "10 5" "0 5" "1 5" "2 5" "3 5" "4 5" "4 6" "4 7" "5 7" "5 6" "5 5")
 ("5 4" "6 4" "6 5" "6 6" "7 6" "7 5" "8 5" "9 5" "10 5" "10 4" "0 4" "1 4" "2 4" "2 5" "3 5" "4 5" "5 5")
 ("5 4" "6 4" "6 5" "6 6" "7 6" "7 5" "8 5" "9 5" "10 5" "10 4" "0 4" "1 4" "2 4" "3 4" "4 4" "4 5" "5 5")
 ("5 4" "6 4" "6 5" "7 5" "7 6" "7 7" "8 7" "8 8" "8 9" "7 9" "7 8" "6 8" "6 7" "6 6" "5 6" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "8 5" "9 5" "10 5" "0 5" "1 5" "2 5" "3 5" "4 5" "4 6" "4 7" "5 7" "6 7" "6 6" "5 6" "5 5")
 ("5 4" "4 4" "3 4" "3 5" "3 6" "3 7" "4 7" "4 8" "5 8" "6 8" "6 7" "7 7" "8 7" "8 6" "8 5" "7 5" "6 5" "5 5")
 ("5 4" "4 4" "4 3" "4 2" "4 1" "4 0" "4 10" "3 10" "3 9" "3 8" "4 8" "4 7" "5 7" "5 6" "5 5")
 ("5 4" "6 4" "7 4" "8 4" "9 4" "10 4" "0 4" "0 3" "1 3" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("5 4" "4 4" "4 3" "3 3" "3 2" "3 1" "3 0" "3 10" "4 10" "4 9" "4 8" "4 7" "5 7" "5 6" "5 5")
 ("5 4" "6 4" "7 4" "7 3" "8 3" "9 3" "10 3" "0 3" "1 3" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ...)
clj꞉hench.path꞉> 
(a* (board->graph (first (-> sample :board :snakes)) sample) "5 4" "5 5" :heuristic #(d (n->c %1) (n->c %2) 11 11))
()
clj꞉hench.path꞉> 
(sfp (second (-> sample :board :snakes)) {:x 2 :y 7} (board->graph sample) (-> sample :board :hazards) 11 11)
; Execution error (ArityException) at hench.path/eval10202 (REPL:2604).
; Wrong number of args (1) passed to: hench.path/board->graph
clj꞉hench.path꞉> 
(sfp (second (-> sample :board :snakes)) {:x 2 :y 7} (board->graph (second (-> sample :board :snakes)) sample) (-> sample :board :hazards) 11 11)
("5 4" "5 5" "5 6" "4 6" "3 6" "2 6" "2 7")
clj꞉hench.path꞉> 
(lsfp (second (-> sample :board :snakes)) {:x 2 :y 7} (board->graph (second (-> sample :board :snakes)) sample) (-> sample :board :hazards) 11 11)
7
clj꞉hench.path꞉> 
(lsfp (first (-> sample :board :snakes)) {:x 2 :y 7} (board->graph (first (-> sample :board :snakes)) sample) (-> sample :board :hazards) 11 11)
8
clj꞉hench.path꞉> 
; Evaluating file: shout.clj
#'hench.shout/random-shout
clj꞉hench.shout꞉> 
; Evaluating file: shout.clj
#'hench.shout/random-shout
clj꞉hench.shout꞉> (random-shout sfquotes)
"Don't fight for victory--fight to improve yourself. Victory will come."
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"I am the man!"
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"I know you can do better! Get up and try again!"
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"In the heat of battle, the blood of the true fighter runs hot!"
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"I am the man!"
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"Omae wa mo... shinde iru!"
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"Shoryureppa...! Shinryuken...! Feel my burning vigor!"
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"If you want to be a true fighter... go home and train!"
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"Damn! You wrinkled my clothes!"
clj꞉hench.shout꞉> 
