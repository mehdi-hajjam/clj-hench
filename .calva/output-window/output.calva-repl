; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: clojure -Sdeps '{:deps {nrepl/nrepl {:mvn/version,"0.9.0"},cider/cider-nrepl {:mvn/version,"0.27.4"}}}' -M -m nrepl.cmdline --middleware "[cider.nrepl/cider-middleware]"
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: shout.clj
#'hench.shout/random-shout
clj꞉hench.shout꞉> (random-shout sfquotes)
"Don't fight for victory--fight to improve yourself. Victory will come."
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"In the heat of battle, the blood of the true fighter runs hot!"
clj꞉hench.shout꞉> 
(random-shout sfquotes)
"I know you can do better! Get up and try again!"
clj꞉hench.shout꞉> 
; Evaluating file: utils.clj
#'hench.utils/in?
clj꞉hench.utils꞉> (reduce (fn [v x y] (if (> x y) (into v x) (into v 0))) [] [1 2 3 4 5] [0 1 2 3 4])
; Execution error (ArityException) at hench.utils/eval8416 (REPL:34).
; Wrong number of args (4) passed to: clojure.core/reduce
clj꞉hench.utils꞉> 
(reduce (fn [v x y] (if (> x y) (conj v x) (conj v 0))) [] [1 2 3 4 5] [0 1 2 3 4])
; Execution error (ArityException) at hench.utils/eval8420 (REPL:38).
; Wrong number of args (4) passed to: clojure.core/reduce
clj꞉hench.utils꞉> (map #(if (> %1 %2) %1) [1 2 3] [0 1 2])
(1 2 3)
clj꞉hench.utils꞉> 
(map #(if (> %1 %2) %1) [1 2 3] [10 1 2])
(nil 2 3)
clj꞉hench.utils꞉> 
; Evaluating file: path.clj
#'hench.path/steps-to-food
clj꞉hench.path꞉> (def sample {:game {:id "game-00fe20da-94ad-11ea-bb37"
                                     :ruleset {:name "standard"
                                               :version "v.1.2.3"}
                                     :timeout 500}
                              :turn 14
                              :board {:height 11
                                      :width 11
                                      :food [{:x 0, :y 2}
                                             {:x 2, :y 0}
                                             {:x 5, :y 5}
                                             {:x 9, :y 0}
                                             {:x 2, :y 6}]
                                      :hazards [{:x 0, :y 3}
                                                {:x 0, :y 1}
                                                {:x 3, :y 2}]
                                      :snakes [{:id "snake-508e96ac-94ad-11ea-bb37"
                                                :name "My Snake"
                                                :health 54
                                                :body [{:x 0, :y 1}
                                                       {:x 1, :y 1}
                                                       {:x 2, :y 1}
                                                       {:x 2, :y 0}
                                                       {:x 3, :y 0}]
                                                :latency "111"
                                                :head {:x 0, :y 1}
                                                :length 5
                                                :shout "why are we shouting??"
                                                :squad ""}
                                               {:id "snake-b67f4906-94ae-11ea-bb37"
                                                :name "Another Snake"
                                                :health 56
                                                :body [{:x 5, :y 4}
                                                       {:x 5, :y 3}
                                                       {:x 6, :y 3}
                                                       {:x 6, :y 2}]
                                                :latency "222"
                                                :head {:x 5, :y 4}
                                                :length 4
                                                :shout "I'm not really sure..."
                                                :squad ""}]}
                              :you {:id "snake-508e96ac-94ad-11ea-bb37"
                                    :name "My Snake"
                                    :health 54
                                    :body [{:x 0, :y 1}
                                           {:x 1, :y 1}
                                           {:x 2, :y 1}
                                           {:x 2, :y 0}
                                           {:x 3, :y 0}]
                                    :latency "111"
                                    :head {:x 0, :y 1}
                                    :length 5
                                    :shout "why are we shouting??"
                                    :squad ""}})
#'hench.path/sample
clj꞉hench.path꞉> ()
; Evaluating file: path.clj
#'hench.path/steps-to-food
clj꞉hench.path꞉> (steps-to-food sample)
; Execution error (NullPointerException) at java.util.regex.Matcher/getTextLength (Matcher.java:1770).
; null
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/steps-to-food
clj꞉hench.path꞉> 
(steps-to-food sample)
first p:  (0 1 0 2)
; Execution error (NullPointerException) at java.util.regex.Matcher/getTextLength (Matcher.java:1770).
; null
clj꞉hench.path꞉> (snakes-to-food (other-snakes sample) {:x 5 :y 6} sample)
3
clj꞉hench.path꞉> 
(snakes-to-food (other-snakes sample) {:x 5 :y 9} sample)
6
clj꞉hench.path꞉> (food sample)
[{:x 0, :y 2} {:x 2, :y 0} {:x 5, :y 5} {:x 9, :y 0} {:x 2, :y 6}]
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/steps-to-food
clj꞉hench.path꞉> 
(steps-to-food sample)
first p:  (0 1 0 2)
; Execution error (NullPointerException) at java.util.regex.Matcher/getTextLength (Matcher.java:1770).
; null
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/steps-to-food
clj꞉hench.path꞉> 
(steps-to-food sample)
staf:  [1000 1000 2 9 6]
nil
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/steps-to-food
clj꞉hench.path꞉> 
(steps-to-food sample)
staf:  [1000 1000 2 9 6]
first p:  (0 1 0 2)
nil
clj꞉hench.path꞉> 
; Evaluating file: path.clj
#'hench.path/steps-to-food
clj꞉hench.path꞉> 
(steps-to-food sample)
staf:  [1000 1000 2 9 6]
first p:  ((0 1 0 2) nil (0 1 0 2 1 2 2 2 2 3 3 3 4 3 4 4 4 5 5 5) (0 1 10 1 9 1 9 0) (0 1 0 2 1 2 1 3 1 4 2 4 2 5 2 6))
nil
clj꞉hench.path꞉> (food sample)
[{:x 0, :y 2} {:x 2, :y 0} {:x 5, :y 5} {:x 9, :y 0} {:x 2, :y 6}]
clj꞉hench.path꞉> (time (sfp (-> sample :you) (first (food sample) (board->graph (-> sample :you) sample) (hazard sample) (width sample) (height sample))))
; Execution error (ArityException) at hench.path/eval9658 (REPL:157).
; Wrong number of args (5) passed to: clojure.core/first--5401
clj꞉hench.path꞉> 
(time (sfp (-> sample :you) (first (food sample)) (board->graph (-> sample :you) sample) (hazard sample) (width sample) (height sample)))
"Elapsed time: 2.19175 msecs"
("0 1" "0 2")
clj꞉hench.path꞉> 
(map #(sfp (-> sample :you) % (board->graph (-> sample :you) sample) (hazard sample) (width sample) (height sample)) (food sample))
(("0 1" "0 2")
 nil
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "10 1" "9 1" "9 0")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "2 4" "2 5" "2 6"))
clj꞉hench.path꞉> 
(time (sfp (-> sample :you) (second (food sample)) (board->graph (-> sample :you) sample) (hazard sample) (width sample) (height sample)))
"Elapsed time: 2466.916041 msecs"
nil
clj꞉hench.path꞉> 
(food sample)
[{:x 0, :y 2} {:x 2, :y 0} {:x 5, :y 5} {:x 9, :y 0} {:x 2, :y 6}]
clj꞉hench.path꞉> 
(-> sample :you)
{:shout "why are we shouting??",
 :squad "",
 :name "My Snake",
 :head {:x 0, :y 1},
 :id "snake-508e96ac-94ad-11ea-bb37",
 :latency "111",
 :length 5,
 :health 54,
 :body [{:x 0, :y 1} {:x 1, :y 1} {:x 2, :y 1} {:x 2, :y 0} {:x 3, :y 0}]}
clj꞉hench.path꞉> 
(map #(sfp (-> sample :you) % (board->graph (-> sample :you) sample) (hazard sample) (width sample) (height sample)) [{:x 0, :y 2} {:x 5, :y 5} {:x 9, :y 0} {:x 2, :y 6}])
(("0 1" "0 2")
 ("0 1" "0 2" "1 2" "2 2" "2 3" "3 3" "4 3" "4 4" "4 5" "5 5")
 ("0 1" "10 1" "9 1" "9 0")
 ("0 1" "0 2" "1 2" "1 3" "1 4" "2 4" "2 5" "2 6"))
clj꞉hench.path꞉> 
